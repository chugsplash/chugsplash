// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {Script, console} from "sphinx-forge-std/Script.sol";
import {Sphinx} from "@sphinx-labs/contracts/contracts/foundry/Sphinx.sol";
import {Network} from "@sphinx-labs/contracts/contracts/foundry/SphinxPluginTypes.sol";
import {SphinxSimulator} from "@sphinx-labs/contracts/contracts/core/SphinxSimulator.sol";
import {MyContract1,MyContract2, HelloSphinx} from "../contracts/test/MyContracts.sol";
import {CREATE3} from "solady/utils/CREATE3.sol";

contract DeploySimulator is Script {
    function run() public {
        bytes memory initCode = hex"608060405234801561001057600080fd5b50604051610f7a380380610f7a833981810160405281019061003291906100cf565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610154565b6000815190506100c98161013d565b92915050565b600080604083850312156100e257600080fd5b60006100f0858286016100ba565b9250506020610101858286016100ba565b9150509250929050565b60006101168261011d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101468161010b565b811461015157600080fd5b50565b610e17806101636000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638d6d6a1614610030575b600080fd5b61004a600480360381019061004591906105a7565b610060565b6040516100579190610847565b60405180910390f35b606060008473ffffffffffffffffffffffffffffffffffffffff163b14156101af5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631688f0b9600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685856040518463ffffffff1660e01b8152600401610101939291906107bd565b602060405180830381600087803b15801561011b57600080fd5b505af115801561012f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101539190610663565b5060008473ffffffffffffffffffffffffffffffffffffffff163b116101ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a590610869565b60405180910390fd5b5b60005b855181101561037c5760008682815181106101f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905060005a905060008773ffffffffffffffffffffffffffffffffffffffff1663468721a784600001518560200151866040015187606001516040518563ffffffff1660e01b815260040161025694939291906107fb565b602060405180830381600087803b15801561027057600080fd5b505af1158015610284573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a8919061063a565b905060005a9050600a600b82856102bf9190610a72565b6102c99190610a18565b6102d391906109e7565b61ea606102e09190610991565b868681518110610319577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505081610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035c90610889565b60405180910390fd5b50505050808061037490610bbc565b9150506101b2565b50949350505050565b6000610398610393846108ce565b6108a9565b905080838252602082019050828560208602820111156103b757600080fd5b60005b8581101561040157813567ffffffffffffffff8111156103d957600080fd5b8086016103e68982610506565b855260208501945060208401935050506001810190506103ba565b5050509392505050565b600061041e610419846108fa565b6108a9565b90508281526020810184848401111561043657600080fd5b610441848285610b49565b509392505050565b60008135905061045881610d5e565b92915050565b600082601f83011261046f57600080fd5b813561047f848260208601610385565b91505092915050565b60008151905061049781610d75565b92915050565b600082601f8301126104ae57600080fd5b81356104be84826020860161040b565b91505092915050565b6000815190506104d681610d8c565b92915050565b6000813590506104eb81610da3565b92915050565b60008135905061050081610dba565b92915050565b60006080828403121561051857600080fd5b61052260806108a9565b9050600061053284828501610449565b600083015250602061054684828501610592565b602083015250604082013567ffffffffffffffff81111561056657600080fd5b6105728482850161049d565b6040830152506060610586848285016104f1565b60608301525092915050565b6000813590506105a181610dca565b92915050565b600080600080608085870312156105bd57600080fd5b600085013567ffffffffffffffff8111156105d757600080fd5b6105e38782880161045e565b94505060206105f4878288016104dc565b935050604085013567ffffffffffffffff81111561061157600080fd5b61061d8782880161049d565b925050606061062e87828801610592565b91505092959194509250565b60006020828403121561064c57600080fd5b600061065a84828501610488565b91505092915050565b60006020828403121561067557600080fd5b6000610683848285016104c7565b91505092915050565b6000610698838361079f565b60208301905092915050565b6106ad81610aa6565b82525050565b60006106be8261093b565b6106c8818561095e565b93506106d38361092b565b8060005b838110156107045781516106eb888261068c565b97506106f683610951565b9250506001810190506106d7565b5085935050505092915050565b600061071c82610946565b610726818561096f565b9350610736818560208601610b58565b61073f81610cc1565b840191505092915050565b61075381610b37565b82525050565b6000610766600a83610980565b915061077182610cd2565b602082019050919050565b6000610789602883610980565b915061079482610cfb565b604082019050919050565b6107a881610b2d565b82525050565b6107b781610b2d565b82525050565b60006060820190506107d260008301866106a4565b81810360208301526107e48185610711565b90506107f360408301846107ae565b949350505050565b600060808201905061081060008301876106a4565b61081d60208301866107ae565b818103604083015261082f8185610711565b905061083e606083018461074a565b95945050505050565b6000602082019050818103600083015261086181846106b3565b905092915050565b6000602082019050818103600083015261088281610759565b9050919050565b600060208201905081810360008301526108a28161077c565b9050919050565b60006108b36108c4565b90506108bf8282610b8b565b919050565b6000604051905090565b600067ffffffffffffffff8211156108e9576108e8610c92565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561091557610914610c92565b5b61091e82610cc1565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061099c82610b2d565b91506109a783610b2d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109dc576109db610c05565b5b828201905092915050565b60006109f282610b2d565b91506109fd83610b2d565b925082610a0d57610a0c610c34565b5b828204905092915050565b6000610a2382610b2d565b9150610a2e83610b2d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a6757610a66610c05565b5b828202905092915050565b6000610a7d82610b2d565b9150610a8883610b2d565b925082821015610a9b57610a9a610c05565b5b828203905092915050565b6000610ab182610b0d565b9050919050565b6000610ac382610b0d565b9050919050565b60008115159050919050565b6000610ae182610ab8565b9050919050565b6000610af382610ab8565b9050919050565b6000819050610b0882610d4a565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b4282610afa565b9050919050565b82818337600083830152505050565b60005b83811015610b76578082015181840152602081019050610b5b565b83811115610b85576000848401525b50505050565b610b9482610cc1565b810181811067ffffffffffffffff82111715610bb357610bb2610c92565b5b80604052505050565b6000610bc782610b2d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bfa57610bf9610c05565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f544f444f28646f63732900000000000000000000000000000000000000000000600082015250565b7f537068696e7853696d756c61746f723a20476e6f73697320536166652063616c60008201527f6c206661696c6564000000000000000000000000000000000000000000000000602082015250565b60028110610d5b57610d5a610c63565b5b50565b610d6781610aa6565b8114610d7257600080fd5b50565b610d7e81610aca565b8114610d8957600080fd5b50565b610d9581610ad6565b8114610da057600080fd5b50565b610dac81610ae8565b8114610db757600080fd5b50565b60028110610dc757600080fd5b50565b610dd381610b2d565b8114610dde57600080fd5b5056fea2646970667358221220be828f0f83daa3a79429e9c65cc09fee19ef1b9c4e3b72f6388037960c5453d264736f6c63430008040033";


        uint256 privateKey = 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80;
        vm.startBroadcast(privateKey);
        bytes32 zeroBytes = bytes32(0);
        bytes memory data = abi.encodePacked(initCode, abi.encode(0xa6B71E26C5e0845f74c812102Ca7114b6a896AB2, 0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552));
        address addr;
        assembly {
            addr := create2(0, add(initCode, 0x20), mload(initCode), zeroBytes)
        }

        console.log(addr);
    }
}
