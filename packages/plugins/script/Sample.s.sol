// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {Script, console} from "sphinx-forge-std/Script.sol";
import {Sphinx} from "@sphinx-labs/contracts/contracts/foundry/Sphinx.sol";
import {SphinxConstants} from "@sphinx-labs/contracts/contracts/foundry/SphinxConstants.sol";
import {Sphinx} from "@sphinx-labs/contracts/contracts/foundry/Sphinx.sol";
import {Network} from "@sphinx-labs/contracts/contracts/foundry/SphinxPluginTypes.sol";
// import {SphinxSimulator} from "@sphinx-labs/contracts/contracts/periphery/SphinxSimulator.sol";
import {MyContract1,MyContract2, HelloSphinx} from "../contracts/test/MyContracts.sol";
import {CREATE3} from "solady/utils/CREATE3.sol";

contract Sample is Sphinx, Script, SphinxConstants {
    MyContract1 myContract;

    function configureSphinx() public override {
        sphinxConfig.projectName = "test_project";
        sphinxConfig.owners = [0x4856e043a1F2CAA8aCEfd076328b4981Aca91000];
        sphinxConfig.threshold = 1;
        sphinxConfig.orgId = "clksrkg1v0001l00815670lu8";
        sphinxConfig.saltNonce = 213222412;
        sphinxConfig.testnets = [
            'sepolia',
            'arbitrum_sepolia',
            'bnb_testnet',
            'linea_goerli',
            'avalanche_fuji',
            'base_sepolia',
            'moonbase_alpha',
            'kava_testnet',
            'rootstock_testnet',
            'rari_sepolia',
            'optimism_sepolia',
            'polygon_mumbai',
            'gnosis_chiado',
            'polygon_zkevm_goerli',
            'fantom_testnet',
            'celo_alfajores',
            'evmos_testnet',
            'scroll_sepolia',
            'zora_sepolia',
            'blast_sepolia'
        ];
    }

    function run() public sphinx {
        new MyContract1(
            -1,
            2,
            address(1),
            address(2)
        );
        new MyContract1(
            -1,
            2,
            address(1),
            address(2)
        );
        new MyContract1(
            -1,
            2,
            address(1),
            address(2)
        );
    }

    function simulator() public sphinx {
        // vm.startBroadcast(vm.envUint("PRIVATE_KEY"));
        // new SphinxSimulator{ salt: 0 }(safeFactoryAddress, safeSingletonAddress);

        bytes memory initCodeWithArgs = hex"60806040523480156200001157600080fd5b506040516200145b3803806200145b8339818101604052810190620000379190620000d7565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000166565b600081519050620000d1816200014c565b92915050565b60008060408385031215620000eb57600080fd5b6000620000fb85828601620000c0565b92505060206200010e85828601620000c0565b9150509250929050565b600062000125826200012c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001578162000118565b81146200016357600080fd5b50565b6112e580620001766000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630d03bb091461003b578063141c7ed11461006b575b600080fd5b61005560048036038101906100509190610848565b61009b565b6040516100629190610c5b565b60405180910390f35b610085600480360381019061008091906107f4565b61030f565b6040516100929190610c39565b60405180910390f35b606060008473ffffffffffffffffffffffffffffffffffffffff163b14156101ea5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631688f0b9600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685856040518463ffffffff1660e01b815260040161013c93929190610bcb565b602060405180830381600087803b15801561015657600080fd5b505af115801561016a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018e91906108db565b5060008473ffffffffffffffffffffffffffffffffffffffff163b116101e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e090610c7d565b60405180910390fd5b5b8373ffffffffffffffffffffffffffffffffffffffff1663b4faba093063141c7ed160e01b8888604051602401610222929190610c09565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b815260040161029c929190610b9b565b600060405180830381600087803b1580156102b657600080fd5b505af19250505080156102c7575060015b610306573d80600081146102f7576040519150601f19603f3d011682016040523d82523d6000602084013e6102fc565b606091505b5080915050610307565b5b949350505050565b60608173ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461037f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037690610cbd565b60405180910390fd5b825167ffffffffffffffff8111156103c0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156103ee5781602001602082028036833780820191505090505b50905060005b835181101561053a576000848281518110610438577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905060005a9050600061046683600001518460200151856040015186606001515a610541565b905060005a9050600a600b828561047d9190610ef0565b6104879190610e96565b6104919190610e65565b61ea6061049e9190610e0f565b8686815181106104d7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505081610523576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051a90610c9d565b60405180910390fd5b50505050808061053290611052565b9150506103f4565b5092915050565b600060018081111561057c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8360018111156105b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156105ce576000808551602087018986f490506105de565b600080855160208701888a87f190505b95945050505050565b60006105fa6105f584610d02565b610cdd565b9050808382526020820190508285602086028201111561061957600080fd5b60005b8581101561066357813567ffffffffffffffff81111561063b57600080fd5b8086016106488982610753565b8552602085019450602084019350505060018101905061061c565b5050509392505050565b600061068061067b84610d2e565b610cdd565b90508281526020810184848401111561069857600080fd5b6106a3848285610fdf565b509392505050565b6000813590506106ba81611243565b92915050565b600082601f8301126106d157600080fd5b81356106e18482602086016105e7565b91505092915050565b600082601f8301126106fb57600080fd5b813561070b84826020860161066d565b91505092915050565b6000815190506107238161125a565b92915050565b60008135905061073881611271565b92915050565b60008135905061074d81611288565b92915050565b60006080828403121561076557600080fd5b61076f6080610cdd565b9050600061077f848285016106ab565b6000830152506020610793848285016107df565b602083015250604082013567ffffffffffffffff8111156107b357600080fd5b6107bf848285016106ea565b60408301525060606107d38482850161073e565b60608301525092915050565b6000813590506107ee81611298565b92915050565b6000806040838503121561080757600080fd5b600083013567ffffffffffffffff81111561082157600080fd5b61082d858286016106c0565b925050602061083e85828601610729565b9150509250929050565b6000806000806080858703121561085e57600080fd5b600085013567ffffffffffffffff81111561087857600080fd5b610884878288016106c0565b945050602061089587828801610729565b935050604085013567ffffffffffffffff8111156108b257600080fd5b6108be878288016106ea565b92505060606108cf878288016107df565b91505092959194509250565b6000602082840312156108ed57600080fd5b60006108fb84828501610714565b91505092915050565b60006109108383610b1a565b905092915050565b60006109248383610b7d565b60208301905092915050565b61093981610f24565b82525050565b61094881610f24565b82525050565b600061095982610d7f565b6109638185610dba565b93508360208202850161097585610d5f565b8060005b858110156109b157848403895281516109928582610904565b945061099d83610da0565b925060208a01995050600181019050610979565b50829750879550505050505092915050565b60006109ce82610d8a565b6109d88185610dcb565b93506109e383610d6f565b8060005b83811015610a145781516109fb8882610918565b9750610a0683610dad565b9250506001810190506109e7565b5085935050505092915050565b6000610a2c82610d95565b610a368185610ddc565b9350610a46818560208601610fee565b610a4f81611157565b840191505092915050565b6000610a6582610d95565b610a6f8185610ded565b9350610a7f818560208601610fee565b610a8881611157565b840191505092915050565b610a9c81610fa9565b82525050565b610aab81610fcd565b82525050565b6000610abe600a83610dfe565b9150610ac982611168565b602082019050919050565b6000610ae1602883610dfe565b9150610aec82611191565b604082019050919050565b6000610b04603083610dfe565b9150610b0f826111e0565b604082019050919050565b6000608083016000830151610b326000860182610930565b506020830151610b456020860182610b7d565b5060408301518482036040860152610b5d8282610a21565b9150506060830151610b726060860182610aa2565b508091505092915050565b610b8681610f9f565b82525050565b610b9581610f9f565b82525050565b6000604082019050610bb0600083018561093f565b8181036020830152610bc28184610a5a565b90509392505050565b6000606082019050610be0600083018661093f565b8181036020830152610bf28185610a5a565b9050610c016040830184610b8c565b949350505050565b60006040820190508181036000830152610c23818561094e565b9050610c326020830184610a93565b9392505050565b60006020820190508181036000830152610c5381846109c3565b905092915050565b60006020820190508181036000830152610c758184610a5a565b905092915050565b60006020820190508181036000830152610c9681610ab1565b9050919050565b60006020820190508181036000830152610cb681610ad4565b9050919050565b60006020820190508181036000830152610cd681610af7565b9050919050565b6000610ce7610cf8565b9050610cf38282611021565b919050565b6000604051905090565b600067ffffffffffffffff821115610d1d57610d1c611128565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610d4957610d48611128565b5b610d5282611157565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e1a82610f9f565b9150610e2583610f9f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e5a57610e5961109b565b5b828201905092915050565b6000610e7082610f9f565b9150610e7b83610f9f565b925082610e8b57610e8a6110ca565b5b828204905092915050565b6000610ea182610f9f565b9150610eac83610f9f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee557610ee461109b565b5b828202905092915050565b6000610efb82610f9f565b9150610f0683610f9f565b925082821015610f1957610f1861109b565b5b828203905092915050565b6000610f2f82610f7f565b9050919050565b6000610f4182610f7f565b9050919050565b6000610f5382610f36565b9050919050565b6000610f6582610f36565b9050919050565b6000819050610f7a8261122f565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610fb482610fbb565b9050919050565b6000610fc682610f7f565b9050919050565b6000610fd882610f6c565b9050919050565b82818337600083830152505050565b60005b8381101561100c578082015181840152602081019050610ff1565b8381111561101b576000848401525b50505050565b61102a82611157565b810181811067ffffffffffffffff8211171561104957611048611128565b5b80604052505050565b600061105d82610f9f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110905761108f61109b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f544f444f28646f63732900000000000000000000000000000000000000000000600082015250565b7f537068696e7853696d756c61746f723a20476e6f73697320536166652063616c60008201527f6c206661696c6564000000000000000000000000000000000000000000000000602082015250565b7f544f444f28646f6373293a206d7573742062652064656c656761746563616c6c60008201527f656420627920736166652070726f787900000000000000000000000000000000602082015250565b600281106112405761123f6110f9565b5b50565b61124c81610f24565b811461125757600080fd5b50565b61126381610f48565b811461126e57600080fd5b50565b61127a81610f5a565b811461128557600080fd5b50565b6002811061129557600080fd5b50565b6112a181610f9f565b81146112ac57600080fd5b5056fea26469706673582212204347a913673aa2c855d4ae56a1e8fd3d2bc972f6c3555ac9cbf233b21836992064736f6c63430008040033000000000000000000000000a6b71e26c5e0845f74c812102ca7114b6a896ab2000000000000000000000000d9db270c1b5e3bd161e8c8503c55ceabee709552";
        address addr;
        assembly {
            addr := create2(0, add(initCodeWithArgs, 0x20), mload(initCodeWithArgs), 0x0)
        }
        console.log(addr);
    }
}
