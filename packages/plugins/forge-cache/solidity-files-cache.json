{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out/artifacts",
    "build_infos": "out/artifacts/build-info",
    "sources": "contracts/test",
    "tests": "test/foundry",
    "scripts": "script",
    "libraries": [
      "node_modules"
    ]
  },
  "files": {
    "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol": {
      "lastModificationDate": 1696825547732,
      "contentHash": "c3a530845e5f6f816439d780a7e295f5",
      "sourceName": "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "SphinxDataTypes": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SphinxDataTypes.sol/SphinxDataTypes.json"
        }
      }
    },
    "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol": {
      "lastModificationDate": 1697070543032,
      "contentHash": "6e4f20d33dd02dcfab10a455be721c9f",
      "sourceName": "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "IAccessControl": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IAccessControl.sol/IAccessControl.json"
        }
      }
    },
    "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol": {
      "lastModificationDate": 1696825547735,
      "contentHash": "6facc6e3370db024bd5ac7b0fa430e25",
      "sourceName": "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ISphinxManager": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ISphinxManager.sol/ISphinxManager.json"
        }
      }
    },
    "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol": {
      "lastModificationDate": 1696825547735,
      "contentHash": "9cac37339aad843ccd3d5f6a9a7b3f66",
      "sourceName": "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ISphinxRegistry": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ISphinxRegistry.sol/ISphinxRegistry.json"
        }
      }
    },
    "../contracts/contracts/SphinxDataTypes.sol": {
      "lastModificationDate": 1696825547732,
      "contentHash": "c3a530845e5f6f816439d780a7e295f5",
      "sourceName": "../contracts/contracts/SphinxDataTypes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "SphinxDataTypes": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SphinxDataTypes.sol/SphinxDataTypes.json"
        }
      }
    },
    "../contracts/contracts/interfaces/IAccessControl.sol": {
      "lastModificationDate": 1697070543032,
      "contentHash": "6e4f20d33dd02dcfab10a455be721c9f",
      "sourceName": "../contracts/contracts/interfaces/IAccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "IAccessControl": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "interfaces/IAccessControl.sol/IAccessControl.json"
        }
      }
    },
    "../contracts/contracts/interfaces/IAccessControlEnumerable.sol": {
      "lastModificationDate": 1697070543032,
      "contentHash": "0108f638a0f2e97e560c6fcc66916e9f",
      "sourceName": "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "IAccessControlEnumerable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IAccessControlEnumerable.sol/IAccessControlEnumerable.json"
        }
      }
    },
    "../contracts/contracts/interfaces/ISemver.sol": {
      "lastModificationDate": 1696825547734,
      "contentHash": "dd133d714f65a1fbe58ed79d59893836",
      "sourceName": "../contracts/contracts/interfaces/ISemver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ISemver": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ISemver.sol/ISemver.json"
        }
      }
    },
    "../contracts/contracts/interfaces/ISphinxAuth.sol": {
      "lastModificationDate": 1696825547734,
      "contentHash": "39dee5d9d2e0b5956916bae50fad60b8",
      "sourceName": "../contracts/contracts/interfaces/ISphinxAuth.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ISphinxAuth": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ISphinxAuth.sol/ISphinxAuth.json"
        }
      }
    },
    "../contracts/contracts/interfaces/ISphinxAuthFactory.sol": {
      "lastModificationDate": 1697058062430,
      "contentHash": "a4c37636edfcd0873da7bba4b96a7144",
      "sourceName": "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ISphinxAuthFactory": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ISphinxAuthFactory.sol/ISphinxAuthFactory.json"
        }
      }
    },
    "../contracts/contracts/interfaces/ISphinxManager.sol": {
      "lastModificationDate": 1696825547735,
      "contentHash": "6facc6e3370db024bd5ac7b0fa430e25",
      "sourceName": "../contracts/contracts/interfaces/ISphinxManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ISphinxManager": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "interfaces/ISphinxManager.sol/ISphinxManager.json"
        }
      }
    },
    "../contracts/contracts/interfaces/ISphinxRegistry.sol": {
      "lastModificationDate": 1696825547735,
      "contentHash": "9cac37339aad843ccd3d5f6a9a7b3f66",
      "sourceName": "../contracts/contracts/interfaces/ISphinxRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ISphinxRegistry": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "interfaces/ISphinxRegistry.sol/ISphinxRegistry.json"
        }
      }
    },
    "client/ChainSpecific.c.sol": {
      "lastModificationDate": 1697058620165,
      "contentHash": "e9b91e9930ccd9d5d3a9d92cae95a8b7",
      "sourceName": "client/ChainSpecific.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "AllNetworksClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ChainSpecific.c.sol/AllNetworksClient.json"
        },
        "OnlyArbitrumClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ChainSpecific.c.sol/OnlyArbitrumClient.json"
        },
        "OnlyOptimismClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ChainSpecific.c.sol/OnlyOptimismClient.json"
        }
      }
    },
    "client/ComplexConstructorArgs.c.sol": {
      "lastModificationDate": 1697058620165,
      "contentHash": "7a84cce99344aff7b6f0b8ab448f83f3",
      "sourceName": "client/ComplexConstructorArgs.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ComplexConstructorArgsClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ComplexConstructorArgs.c.sol/ComplexConstructorArgsClient.json"
        }
      }
    },
    "client/ConstructorArgsValidationPartOne.c.sol": {
      "lastModificationDate": 1697058620165,
      "contentHash": "91b7b1de0427ae86dd26ce7c6a797799",
      "sourceName": "client/ConstructorArgsValidationPartOne.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ConstructorArgsValidationPartOneClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ConstructorArgsValidationPartOne.c.sol/ConstructorArgsValidationPartOneClient.json"
        }
      }
    },
    "client/ConstructorArgsValidationPartTwo.c.sol": {
      "lastModificationDate": 1697058620166,
      "contentHash": "905d76ae3d9230fa5fbe094e8757ddd9",
      "sourceName": "client/ConstructorArgsValidationPartTwo.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ConstructorArgsValidationPartTwoClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ConstructorArgsValidationPartTwo.c.sol/ConstructorArgsValidationPartTwoClient.json"
        }
      }
    },
    "client/ContainsStorage.c.sol": {
      "lastModificationDate": 1697058620168,
      "contentHash": "4cc7d3700d413ab5103e65081fb8f581",
      "sourceName": "client/ContainsStorage.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "OtherImmutablesClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ContainsStorage.c.sol/OtherImmutablesClient.json"
        },
        "StorageClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ContainsStorage.c.sol/StorageClient.json"
        }
      }
    },
    "client/ExternalContract.c.sol": {
      "lastModificationDate": 1697058620149,
      "contentHash": "9660cf44561f3a789b046fc6c64a606d",
      "sourceName": "client/ExternalContract.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ExternalContractClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ExternalContract.c.sol/ExternalContractClient.json"
        }
      }
    },
    "client/MaxArgs.c.sol": {
      "lastModificationDate": 1697058620168,
      "contentHash": "36069fbed865b98689052b8e4d44fac9",
      "sourceName": "client/MaxArgs.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "MaxArgsClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MaxArgs.c.sol/MaxArgsClient.json"
        }
      }
    },
    "client/MsgSender.c.sol": {
      "lastModificationDate": 1697058620169,
      "contentHash": "8f174599c093481bef6658498a33b996",
      "sourceName": "client/MsgSender.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "MsgSenderClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MsgSender.c.sol/MsgSenderClient.json"
        }
      }
    },
    "client/MyContracts.c.sol": {
      "lastModificationDate": 1697065689073,
      "contentHash": "c94e5274b4d32a848a248c7cc69b0b47",
      "sourceName": "client/MyContracts.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/MyContracts.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "MyAccessControlClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MyContracts.c.sol/MyAccessControlClient.json"
        },
        "MyContract1Client": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MyContracts.c.sol/MyContract1Client.json"
        },
        "MyContract2Client": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MyContracts.c.sol/MyContract2Client.json"
        },
        "MyOwnableClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MyContracts.c.sol/MyOwnableClient.json"
        }
      }
    },
    "client/Reverter.c.sol": {
      "lastModificationDate": 1697058620172,
      "contentHash": "9a01ad9e015ef6194819a3d0834614c3",
      "sourceName": "client/Reverter.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ReverterClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Reverter.c.sol/ReverterClient.json"
        }
      }
    },
    "client/SimpleStorage.c.sol": {
      "lastModificationDate": 1697058620172,
      "contentHash": "61c9bc63cea39e1e940f464765a29e1c",
      "sourceName": "client/SimpleStorage.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "SimpleStorageClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SimpleStorage.c.sol/SimpleStorageClient.json"
        }
      }
    },
    "client/SphinxClient.sol": {
      "lastModificationDate": 1697058620174,
      "contentHash": "cbd215f6061cdab5677560c006645bcf",
      "sourceName": "client/SphinxClient.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "client/ChainSpecific.c.sol",
        "client/ComplexConstructorArgs.c.sol",
        "client/ConstructorArgsValidationPartOne.c.sol",
        "client/ConstructorArgsValidationPartTwo.c.sol",
        "client/ContainsStorage.c.sol",
        "client/ExternalContract.c.sol",
        "client/MaxArgs.c.sol",
        "client/MsgSender.c.sol",
        "client/MyContracts.c.sol",
        "client/Reverter.c.sol",
        "client/SimpleStorage.c.sol",
        "client/StateDependentActions.c.sol",
        "client/Stateless.c.sol",
        "client/VariableValidation.c.sol",
        "client/typegen/ArrayInputTypes.c.sol",
        "client/typegen/BasicInputTypes.c.sol",
        "client/typegen/Duplicates.c.sol",
        "client/typegen/FunctionInputType.c.sol",
        "client/typegen/ImmutableInputTypes.c.sol",
        "client/typegen/UnnamedParameters.c.sol",
        "client/typegen/conflictingNameContracts/First.c.sol",
        "client/typegen/conflictingNameContracts/Second.c.sol",
        "client/typegen/conflictingTypeNames/First.c.sol",
        "client/typegen/conflictingTypeNames/Second.c.sol",
        "client/typegen/contractInputs/FunctionContract.c.sol",
        "client/typegen/contractInputs/ImportContract.c.sol",
        "client/typegen/imports/Alias.c.sol",
        "client/typegen/imports/AliasArray.c.sol",
        "client/typegen/imports/LocalParent.c.sol",
        "client/typegen/imports/NoAlias.c.sol",
        "client/typegen/imports/NoAliasArray.c.sol",
        "client/typegen/imports/Types.c.sol",
        "client/typegen/inheritance/Alias.c.sol",
        "client/typegen/inheritance/Child.c.sol",
        "client/typegen/inheritance/Parent.c.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/ComplexConstructorArgs.sol",
        "contracts/test/ConstructorArgsValidationPartTwo.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/MyContracts.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/Stateless.sol",
        "contracts/test/typegen/ArrayInputTypes.sol",
        "contracts/test/typegen/Duplicates.sol",
        "contracts/test/typegen/conflictingTypeNames/First.sol",
        "contracts/test/typegen/conflictingTypeNames/Second.sol",
        "contracts/test/typegen/imports/LocalParent.sol",
        "contracts/test/typegen/imports/NoAlias.sol",
        "contracts/test/typegen/imports/NoAliasArray.sol",
        "contracts/test/typegen/imports/Types.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "SphinxClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SphinxClient.sol/SphinxClient.json"
        }
      }
    },
    "client/StateDependentActions.c.sol": {
      "lastModificationDate": 1697058620173,
      "contentHash": "494e38459034029dcc19232df8168738",
      "sourceName": "client/StateDependentActions.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "BoxClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StateDependentActions.c.sol/BoxClient.json"
        },
        "StateDependentActionsClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StateDependentActions.c.sol/StateDependentActionsClient.json"
        }
      }
    },
    "client/Stateless.c.sol": {
      "lastModificationDate": 1697058620173,
      "contentHash": "045bbdf3d4166eda39b4a0d32cdceaae",
      "sourceName": "client/Stateless.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "AnotherStatelessClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Stateless.c.sol/AnotherStatelessClient.json"
        },
        "StatelessClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Stateless.c.sol/StatelessClient.json"
        }
      }
    },
    "client/VariableValidation.c.sol": {
      "lastModificationDate": 1697058620174,
      "contentHash": "319dac52da9746e0afe5227608b9b173",
      "sourceName": "client/VariableValidation.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "VariableValidationClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "VariableValidation.c.sol/VariableValidationClient.json"
        }
      }
    },
    "client/typegen/ArrayInputTypes.c.sol": {
      "lastModificationDate": 1697058620162,
      "contentHash": "612f19cb9631ef5a9595ddefb697fac6",
      "sourceName": "client/typegen/ArrayInputTypes.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/typegen/ArrayInputTypes.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ArrayInputTypesClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ArrayInputTypes.c.sol/ArrayInputTypesClient.json"
        },
        "MyContractTypeClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ArrayInputTypes.c.sol/MyContractTypeClient.json"
        }
      }
    },
    "client/typegen/BasicInputTypes.c.sol": {
      "lastModificationDate": 1697058620162,
      "contentHash": "63e318de6a9556356570bab40406ce6d",
      "sourceName": "client/typegen/BasicInputTypes.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "BasicInputTypesClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BasicInputTypes.c.sol/BasicInputTypesClient.json"
        }
      }
    },
    "client/typegen/Duplicates.c.sol": {
      "lastModificationDate": 1697058620163,
      "contentHash": "ff9a406388a4e4dad75324d978fa978c",
      "sourceName": "client/typegen/Duplicates.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "MyEdgeCasesDuplicateClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Duplicates.c.sol/MyEdgeCasesDuplicateClient.json"
        }
      }
    },
    "client/typegen/FunctionInputType.c.sol": {
      "lastModificationDate": 1697058620163,
      "contentHash": "370b72e414a606aeac6cd32d312bf12c",
      "sourceName": "client/typegen/FunctionInputType.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "FunctionInputContractClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "FunctionInputType.c.sol/FunctionInputContractClient.json"
        }
      }
    },
    "client/typegen/ImmutableInputTypes.c.sol": {
      "lastModificationDate": 1697058620163,
      "contentHash": "781652c33459554d05c1b7931e97da29",
      "sourceName": "client/typegen/ImmutableInputTypes.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ImmutableInputTypesClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ImmutableInputTypes.c.sol/ImmutableInputTypesClient.json"
        }
      }
    },
    "client/typegen/UnnamedParameters.c.sol": {
      "lastModificationDate": 1697058620164,
      "contentHash": "bd1dc529765baa6d8cd8eb462223e0e8",
      "sourceName": "client/typegen/UnnamedParameters.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "UnnamedParametersClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "UnnamedParameters.c.sol/UnnamedParametersClient.json"
        }
      }
    },
    "client/typegen/conflictingNameContracts/First.c.sol": {
      "lastModificationDate": 1697058620150,
      "contentHash": "a6005f753cb67d09e8594b06decc4b4d",
      "sourceName": "client/typegen/conflictingNameContracts/First.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ConflictingNameContractClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "First.c.sol/ConflictingNameContractClient.json"
        }
      }
    },
    "client/typegen/conflictingNameContracts/Second.c.sol": {
      "lastModificationDate": 1697058620150,
      "contentHash": "64c4bd53c6429376db94fbac799d3d3b",
      "sourceName": "client/typegen/conflictingNameContracts/Second.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "TypegenConflictingNameContractsSecond_ConflictingNameContractClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Second.c.sol/TypegenConflictingNameContractsSecond_ConflictingNameContractClient.json"
        }
      }
    },
    "client/typegen/conflictingTypeNames/First.c.sol": {
      "lastModificationDate": 1697058620151,
      "contentHash": "89d39090973b9ce3f0f0125c62aedcdd",
      "sourceName": "client/typegen/conflictingTypeNames/First.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/typegen/conflictingTypeNames/First.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ConflictingTypeNameContractFirstClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "First.c.sol/ConflictingTypeNameContractFirstClient.json"
        }
      }
    },
    "client/typegen/conflictingTypeNames/Second.c.sol": {
      "lastModificationDate": 1697058620152,
      "contentHash": "18faabaeced5b66cb18bfda50aba1452",
      "sourceName": "client/typegen/conflictingTypeNames/Second.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ConflictingTypeNameContractSecondClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Second.c.sol/ConflictingTypeNameContractSecondClient.json"
        }
      }
    },
    "client/typegen/contractInputs/FunctionContract.c.sol": {
      "lastModificationDate": 1697058620152,
      "contentHash": "95432af9eec532bc56c43765f10ad423",
      "sourceName": "client/typegen/contractInputs/FunctionContract.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "FunctionContractClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "FunctionContract.c.sol/FunctionContractClient.json"
        },
        "LocalContractClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "FunctionContract.c.sol/LocalContractClient.json"
        }
      }
    },
    "client/typegen/contractInputs/ImportContract.c.sol": {
      "lastModificationDate": 1697058620152,
      "contentHash": "a7793ec3c2318ffc70fe98e76d82479f",
      "sourceName": "client/typegen/contractInputs/ImportContract.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "MyImportContractClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ImportContract.c.sol/MyImportContractClient.json"
        }
      }
    },
    "client/typegen/imports/Alias.c.sol": {
      "lastModificationDate": 1697058620153,
      "contentHash": "266d4bf7e03b5c001182b870411845e8",
      "sourceName": "client/typegen/imports/Alias.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "AliasImportsClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Alias.c.sol/AliasImportsClient.json"
        }
      }
    },
    "client/typegen/imports/AliasArray.c.sol": {
      "lastModificationDate": 1697058620154,
      "contentHash": "c205e0d787e95c30b81bdfc56bda1b89",
      "sourceName": "client/typegen/imports/AliasArray.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "AliasImportsArrayClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "AliasArray.c.sol/AliasImportsArrayClient.json"
        }
      }
    },
    "client/typegen/imports/LocalParent.c.sol": {
      "lastModificationDate": 1697058620155,
      "contentHash": "3e773184766f1e30626f5997671070f5",
      "sourceName": "client/typegen/imports/LocalParent.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "LocalParentTypesClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "LocalParent.c.sol/LocalParentTypesClient.json"
        },
        "MyLocalTypeContractClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "LocalParent.c.sol/MyLocalTypeContractClient.json"
        }
      }
    },
    "client/typegen/imports/NoAlias.c.sol": {
      "lastModificationDate": 1697058620156,
      "contentHash": "7425414aa5143737975949a442ccee1d",
      "sourceName": "client/typegen/imports/NoAlias.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "NoAliasImportsOneClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "NoAlias.c.sol/NoAliasImportsOneClient.json"
        },
        "NoAliasImportsTwoClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "NoAlias.c.sol/NoAliasImportsTwoClient.json"
        }
      }
    },
    "client/typegen/imports/NoAliasArray.c.sol": {
      "lastModificationDate": 1697058620157,
      "contentHash": "c6474483e9ad86de87972984b7d2f1d3",
      "sourceName": "client/typegen/imports/NoAliasArray.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "NoAliasArrayImportsOneClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "NoAliasArray.c.sol/NoAliasArrayImportsOneClient.json"
        },
        "NoAliasArrayImportsTwoClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "NoAliasArray.c.sol/NoAliasArrayImportsTwoClient.json"
        }
      }
    },
    "client/typegen/imports/Types.c.sol": {
      "lastModificationDate": 1697058620157,
      "contentHash": "9406aa9001228a6ea36a493fbfcbc8f7",
      "sourceName": "client/typegen/imports/Types.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "MyTypeContractClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Types.c.sol/MyTypeContractClient.json"
        }
      }
    },
    "client/typegen/inheritance/Alias.c.sol": {
      "lastModificationDate": 1697058620158,
      "contentHash": "7be1874a7728c83d9ff7ee3cd0890cbf",
      "sourceName": "client/typegen/inheritance/Alias.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "GrandchildClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Alias.c.sol/GrandchildClient.json"
        }
      }
    },
    "client/typegen/inheritance/Child.c.sol": {
      "lastModificationDate": 1697058620160,
      "contentHash": "50e208ad3b92169ed15d4af56c109de5",
      "sourceName": "client/typegen/inheritance/Child.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ChildClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Child.c.sol/ChildClient.json"
        }
      }
    },
    "client/typegen/inheritance/Parent.c.sol": {
      "lastModificationDate": 1697058620160,
      "contentHash": "f45ef29d45e20501bb6a16a39ac3bf23",
      "sourceName": "client/typegen/inheritance/Parent.c.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.7.4, <0.9.0",
      "artifacts": {
        "ParentClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Parent.c.sol/ParentClient.json"
        }
      }
    },
    "contracts/foundry/AbstractContractClient.sol": {
      "lastModificationDate": 1697066242025,
      "contentHash": "8fda84808768395b7d1de4fcb760b504",
      "sourceName": "contracts/foundry/AbstractContractClient.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AbstractContractClient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "AbstractContractClient.sol/AbstractContractClient.json"
        }
      }
    },
    "contracts/foundry/Sphinx.sol": {
      "lastModificationDate": 1697070235977,
      "contentHash": "5143f504c9c356a0af2d6f965c3798c3",
      "sourceName": "contracts/foundry/Sphinx.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Sphinx": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Sphinx.sol/Sphinx.json"
        }
      }
    },
    "contracts/foundry/SphinxConstants.sol": {
      "lastModificationDate": 1697058081268,
      "contentHash": "abb40ddb2b8fc85688dc262003626402",
      "sourceName": "contracts/foundry/SphinxConstants.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "SphinxConstants": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SphinxConstants.sol/SphinxConstants.json"
        }
      }
    },
    "contracts/foundry/SphinxPluginTypes.sol": {
      "lastModificationDate": 1697070063461,
      "contentHash": "1387a14b267f773ce664845d1dfa8aea",
      "sourceName": "contracts/foundry/SphinxPluginTypes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "../contracts/contracts/SphinxDataTypes.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SphinxPluginTypes": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SphinxPluginTypes.sol/SphinxPluginTypes.json"
        }
      }
    },
    "contracts/foundry/SphinxUtils.sol": {
      "lastModificationDate": 1697065213304,
      "contentHash": "ed573ba41c3ef757059bf627c60f0ccd",
      "sourceName": "contracts/foundry/SphinxUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SphinxUtils": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SphinxUtils.sol/SphinxUtils.json"
        }
      }
    },
    "contracts/test/ChainSpecific.sol": {
      "lastModificationDate": 1697065209927,
      "contentHash": "4f7ab8845c687ba384992e74cb18f8b9",
      "sourceName": "contracts/test/ChainSpecific.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AllNetworks": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ChainSpecific.sol/AllNetworks.json"
        },
        "OnlyArbitrum": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ChainSpecific.sol/OnlyArbitrum.json"
        },
        "OnlyOptimism": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ChainSpecific.sol/OnlyOptimism.json"
        }
      }
    },
    "contracts/test/ComplexConstructorArgs.sol": {
      "lastModificationDate": 1697065209927,
      "contentHash": "ac4f4d4393e26bd473bd084a30cdae61",
      "sourceName": "contracts/test/ComplexConstructorArgs.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ComplexConstructorArgs": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ComplexConstructorArgs.sol/ComplexConstructorArgs.json"
        }
      }
    },
    "contracts/test/ConstructorArgsValidationPartOne.sol": {
      "lastModificationDate": 1697065209927,
      "contentHash": "e126e4817a92c3b90f19cfa13c60d9c9",
      "sourceName": "contracts/test/ConstructorArgsValidationPartOne.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ConstructorArgsValidationPartOne": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ConstructorArgsValidationPartOne.sol/ConstructorArgsValidationPartOne.json"
        }
      }
    },
    "contracts/test/ConstructorArgsValidationPartTwo.sol": {
      "lastModificationDate": 1697065209927,
      "contentHash": "f2a399129f4419ed42d15c80316e8a12",
      "sourceName": "contracts/test/ConstructorArgsValidationPartTwo.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ConstructorArgsValidationPartTwo": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ConstructorArgsValidationPartTwo.sol/ConstructorArgsValidationPartTwo.json"
        }
      }
    },
    "contracts/test/ContainsStorage.sol": {
      "lastModificationDate": 1697065209928,
      "contentHash": "1da4ccb1ffe75c274a453ab759f302b3",
      "sourceName": "contracts/test/ContainsStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "../contracts/contracts/SphinxDataTypes.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/Stateless.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "OtherImmutables": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ContainsStorage.sol/OtherImmutables.json"
        },
        "Storage": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ContainsStorage.sol/Storage.json"
        },
        "Types": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ContainsStorage.sol/Types.json"
        }
      }
    },
    "contracts/test/MaxArgs.sol": {
      "lastModificationDate": 1697065209928,
      "contentHash": "1e94334882fa84d03aa8f62f2b5be53c",
      "sourceName": "contracts/test/MaxArgs.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MaxArgs": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MaxArgs.sol/MaxArgs.json"
        }
      }
    },
    "contracts/test/MsgSender.sol": {
      "lastModificationDate": 1697065209928,
      "contentHash": "b82fe7cb0ce8afa732579967bbdc89f1",
      "sourceName": "contracts/test/MsgSender.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MsgSender": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MsgSender.sol/MsgSender.json"
        }
      }
    },
    "contracts/test/MyContracts.sol": {
      "lastModificationDate": 1697065209928,
      "contentHash": "7487fd53f0a2b87d91e5597b535affe0",
      "sourceName": "contracts/test/MyContracts.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MyAccessControl": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MyContracts.sol/MyAccessControl.json"
        },
        "MyContract1": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MyContracts.sol/MyContract1.json"
        },
        "MyContract2": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MyContracts.sol/MyContract2.json"
        },
        "MyOwnable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MyContracts.sol/MyOwnable.json"
        }
      }
    },
    "contracts/test/Reverter.sol": {
      "lastModificationDate": 1697065209928,
      "contentHash": "41819a56f33a160a822d7dad6fca54cb",
      "sourceName": "contracts/test/Reverter.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Reverter": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Reverter.sol/Reverter.json"
        }
      }
    },
    "contracts/test/SimpleStorage.sol": {
      "lastModificationDate": 1697065209929,
      "contentHash": "e0752955a90afec4f27dc48102691da2",
      "sourceName": "contracts/test/SimpleStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "../contracts/contracts/SphinxDataTypes.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/Stateless.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SimpleStorage": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SimpleStorage.sol/SimpleStorage.json"
        }
      }
    },
    "contracts/test/SphinxExternal.sol": {
      "lastModificationDate": 1697061374685,
      "contentHash": "10c1923554a22f9bcc7f4f583af851ec",
      "sourceName": "contracts/test/SphinxExternal.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "testExternalContracts/ExternalContract.sol"
      ],
      "versionRequirement": ">=0.8.4, <0.9.0",
      "artifacts": {
        "SphinxExternal": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SphinxExternal.sol/SphinxExternal.json"
        }
      }
    },
    "contracts/test/SphinxTestUtils.sol": {
      "lastModificationDate": 1697065209929,
      "contentHash": "2d54b8500159f3b91e19555b35a2a532",
      "sourceName": "contracts/test/SphinxTestUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/foundry/SphinxConstants.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SphinxTestUtils": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SphinxTestUtils.sol/SphinxTestUtils.json"
        }
      }
    },
    "contracts/test/StateDependentActions.sol": {
      "lastModificationDate": 1697065209929,
      "contentHash": "6fbc8ba41d4fe2cbcf82511e134549da",
      "sourceName": "contracts/test/StateDependentActions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Box": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StateDependentActions.sol/Box.json"
        },
        "StateDependentActions": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StateDependentActions.sol/StateDependentActions.json"
        }
      }
    },
    "contracts/test/Stateless.sol": {
      "lastModificationDate": 1697065209929,
      "contentHash": "c67dcf054289b940a236e0dc3e3d4b12",
      "sourceName": "contracts/test/Stateless.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "../contracts/contracts/SphinxDataTypes.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AnotherStateless": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Stateless.sol/AnotherStateless.json"
        },
        "Stateless": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Stateless.sol/Stateless.json"
        }
      }
    },
    "contracts/test/VariableValidation.sol": {
      "lastModificationDate": 1697065209929,
      "contentHash": "2889c8f63f9a98ad40a202b17c770a48",
      "sourceName": "contracts/test/VariableValidation.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "VariableValidation": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "VariableValidation.sol/VariableValidation.json"
        }
      }
    },
    "contracts/test/typegen/ArrayInputTypes.sol": {
      "lastModificationDate": 1697065209930,
      "contentHash": "d3c49ff936d7fe381dddb7a99b6f8587",
      "sourceName": "contracts/test/typegen/ArrayInputTypes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ArrayInputTypes": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ArrayInputTypes.sol/ArrayInputTypes.json"
        },
        "MyContractType": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ArrayInputTypes.sol/MyContractType.json"
        }
      }
    },
    "contracts/test/typegen/BasicInputTypes.sol": {
      "lastModificationDate": 1697065209930,
      "contentHash": "7f8372edac981e6d746d2bc13cbcab40",
      "sourceName": "contracts/test/typegen/BasicInputTypes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "BasicInputTypes": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BasicInputTypes.sol/BasicInputTypes.json"
        }
      }
    },
    "contracts/test/typegen/Duplicates.sol": {
      "lastModificationDate": 1697065209930,
      "contentHash": "b7b2c88cde519e6d834d83a624eae9c4",
      "sourceName": "contracts/test/typegen/Duplicates.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MyEdgeCasesDuplicate": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Duplicates.sol/MyEdgeCasesDuplicate.json"
        }
      }
    },
    "contracts/test/typegen/FunctionInputType.sol": {
      "lastModificationDate": 1697065209930,
      "contentHash": "51d233a6dbb839f38dd97f89fd2e7f9d",
      "sourceName": "contracts/test/typegen/FunctionInputType.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "FunctionInputContract": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "FunctionInputType.sol/FunctionInputContract.json"
        }
      }
    },
    "contracts/test/typegen/ImmutableInputTypes.sol": {
      "lastModificationDate": 1697065209930,
      "contentHash": "d399420e4acf53afd7fd54aae6942a57",
      "sourceName": "contracts/test/typegen/ImmutableInputTypes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ImmutableInputTypes": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ImmutableInputTypes.sol/ImmutableInputTypes.json"
        }
      }
    },
    "contracts/test/typegen/UnnamedParameters.sol": {
      "lastModificationDate": 1697065209930,
      "contentHash": "a5d2bf9d6f4ebec7c444adf5f46b627f",
      "sourceName": "contracts/test/typegen/UnnamedParameters.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "UnnamedParameters": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "UnnamedParameters.sol/UnnamedParameters.json"
        }
      }
    },
    "contracts/test/typegen/conflictingNameContracts/First.sol": {
      "lastModificationDate": 1697065209931,
      "contentHash": "ef384f3c9434e95da3ab7a07bc6d1c00",
      "sourceName": "contracts/test/typegen/conflictingNameContracts/First.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ConflictingNameContract": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "First.sol/ConflictingNameContract.json"
        }
      }
    },
    "contracts/test/typegen/conflictingNameContracts/Second.sol": {
      "lastModificationDate": 1697065209931,
      "contentHash": "deccd56202b6c8acdaf225c5e5cb21d8",
      "sourceName": "contracts/test/typegen/conflictingNameContracts/Second.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ConflictingNameContract": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Second.sol/ConflictingNameContract.json"
        }
      }
    },
    "contracts/test/typegen/conflictingTypeNames/First.sol": {
      "lastModificationDate": 1697065209931,
      "contentHash": "574e6509da5dc66393b7a326bf96ac8d",
      "sourceName": "contracts/test/typegen/conflictingTypeNames/First.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ConflictingTypeNameContractFirst": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "First.sol/ConflictingTypeNameContractFirst.json"
        }
      }
    },
    "contracts/test/typegen/conflictingTypeNames/Second.sol": {
      "lastModificationDate": 1697065209931,
      "contentHash": "b8f70b960ba20ebb72a3b56c12f33d5e",
      "sourceName": "contracts/test/typegen/conflictingTypeNames/Second.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ConflictingTypeNameContractSecond": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Second.sol/ConflictingTypeNameContractSecond.json"
        }
      }
    },
    "contracts/test/typegen/contractInputs/FunctionContract.sol": {
      "lastModificationDate": 1697065209931,
      "contentHash": "d7309dbc0cac8a16706551c3149f7578",
      "sourceName": "contracts/test/typegen/contractInputs/FunctionContract.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/test/typegen/contractInputs/ImportContract.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "FunctionContract": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "FunctionContract.sol/FunctionContract.json"
        },
        "LocalContract": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "FunctionContract.sol/LocalContract.json"
        }
      }
    },
    "contracts/test/typegen/contractInputs/ImportContract.sol": {
      "lastModificationDate": 1697065209931,
      "contentHash": "c2ff19e9ec0aa5f23c3a1ffedd41240f",
      "sourceName": "contracts/test/typegen/contractInputs/ImportContract.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MyImportContract": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ImportContract.sol/MyImportContract.json"
        }
      }
    },
    "contracts/test/typegen/imports/Alias.sol": {
      "lastModificationDate": 1697065209932,
      "contentHash": "bf00c208788babf50bfd788ddd8a5f29",
      "sourceName": "contracts/test/typegen/imports/Alias.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/test/typegen/imports/Types.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AliasImports": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Alias.sol/AliasImports.json"
        }
      }
    },
    "contracts/test/typegen/imports/AliasArray.sol": {
      "lastModificationDate": 1697065209932,
      "contentHash": "2dd337c410d1ddc7009a8af78e802845",
      "sourceName": "contracts/test/typegen/imports/AliasArray.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/test/typegen/imports/Types.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AliasImportsArray": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "AliasArray.sol/AliasImportsArray.json"
        }
      }
    },
    "contracts/test/typegen/imports/LocalParent.sol": {
      "lastModificationDate": 1697065209932,
      "contentHash": "00b8792dd12a9cfa5eecf5c8c09fce7b",
      "sourceName": "contracts/test/typegen/imports/LocalParent.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "LocalParentTypes": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "LocalParent.sol/LocalParentTypes.json"
        },
        "MyLocalTypeContract": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "LocalParent.sol/MyLocalTypeContract.json"
        },
        "MyLocalTypeLibrary": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "LocalParent.sol/MyLocalTypeLibrary.json"
        }
      }
    },
    "contracts/test/typegen/imports/NoAlias.sol": {
      "lastModificationDate": 1697065209932,
      "contentHash": "34ee60d89bb9374dcc936e11c1dc92e9",
      "sourceName": "contracts/test/typegen/imports/NoAlias.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/test/typegen/imports/Types.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "NoAliasImportsOne": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "NoAlias.sol/NoAliasImportsOne.json"
        },
        "NoAliasImportsTwo": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "NoAlias.sol/NoAliasImportsTwo.json"
        }
      }
    },
    "contracts/test/typegen/imports/NoAliasArray.sol": {
      "lastModificationDate": 1697065209932,
      "contentHash": "4d48ee14a28a5d2de8570e6fe501085c",
      "sourceName": "contracts/test/typegen/imports/NoAliasArray.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/test/typegen/imports/Types.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "NoAliasArrayImportsOne": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "NoAliasArray.sol/NoAliasArrayImportsOne.json"
        },
        "NoAliasArrayImportsTwo": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "NoAliasArray.sol/NoAliasArrayImportsTwo.json"
        }
      }
    },
    "contracts/test/typegen/imports/Types.sol": {
      "lastModificationDate": 1697065209932,
      "contentHash": "8031f61325c490db9a06ccf3074fb6fb",
      "sourceName": "contracts/test/typegen/imports/Types.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "MyTypeContract": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Types.sol/MyTypeContract.json"
        },
        "MyTypeLibrary": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Types.sol/MyTypeLibrary.json"
        }
      }
    },
    "contracts/test/typegen/inheritance/Alias.sol": {
      "lastModificationDate": 1697065209933,
      "contentHash": "46d0afc3332d37c9eacb7f50b763db96",
      "sourceName": "contracts/test/typegen/inheritance/Alias.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/test/typegen/inheritance/Child.sol",
        "contracts/test/typegen/inheritance/Parent.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Grandchild": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Alias.sol/Grandchild.json"
        }
      }
    },
    "contracts/test/typegen/inheritance/Child.sol": {
      "lastModificationDate": 1697070543032,
      "contentHash": "f6c2745537e04cd1d04db08de545652c",
      "sourceName": "contracts/test/typegen/inheritance/Child.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/test/typegen/inheritance/Parent.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Child": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Child.sol/Child.json"
        }
      }
    },
    "contracts/test/typegen/inheritance/Parent.sol": {
      "lastModificationDate": 1697065209933,
      "contentHash": "ab74edf529c1b11431b8b76368876362",
      "sourceName": "contracts/test/typegen/inheritance/Parent.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Parent": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Parent.sol/Parent.json"
        }
      }
    },
    "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroEndpoint.sol": {
      "lastModificationDate": 1691560897592,
      "contentHash": "008cb6eedb0a3be0c12cdd2307d1d9b1",
      "sourceName": "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroEndpoint.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroUserApplicationConfig.sol"
      ],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "ILayerZeroEndpoint": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ILayerZeroEndpoint.sol/ILayerZeroEndpoint.json"
        }
      }
    },
    "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroReceiver.sol": {
      "lastModificationDate": 1691560897592,
      "contentHash": "62703c3b19a452bfdaca90f5bc59cfef",
      "sourceName": "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroReceiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "ILayerZeroReceiver": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ILayerZeroReceiver.sol/ILayerZeroReceiver.json"
        }
      }
    },
    "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroUserApplicationConfig.sol": {
      "lastModificationDate": 1691560897592,
      "contentHash": "ea8e436e41bc96a3d434edb386b63cda",
      "sourceName": "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroUserApplicationConfig.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "ILayerZeroUserApplicationConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ILayerZeroUserApplicationConfig.sol/ILayerZeroUserApplicationConfig.json"
        }
      }
    },
    "node_modules/@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol": {
      "lastModificationDate": 1691560897592,
      "contentHash": "7222a8d323c1394fcfe339d593a06f88",
      "sourceName": "node_modules/@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroEndpoint.sol",
        "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroReceiver.sol",
        "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroUserApplicationConfig.sol",
        "node_modules/@layerzerolabs/solidity-examples/contracts/util/BytesLib.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "LzApp": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "LzApp.sol/LzApp.json"
        }
      }
    },
    "node_modules/@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol": {
      "lastModificationDate": 1691560897592,
      "contentHash": "f35024ad9dd30ddf6f0fbc72daedcce9",
      "sourceName": "node_modules/@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroEndpoint.sol",
        "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroReceiver.sol",
        "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroUserApplicationConfig.sol",
        "node_modules/@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol",
        "node_modules/@layerzerolabs/solidity-examples/contracts/util/BytesLib.sol",
        "node_modules/@layerzerolabs/solidity-examples/contracts/util/ExcessivelySafeCall.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "NonblockingLzApp": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "NonblockingLzApp.sol/NonblockingLzApp.json"
        }
      }
    },
    "node_modules/@layerzerolabs/solidity-examples/contracts/util/BytesLib.sol": {
      "lastModificationDate": 1691560897592,
      "contentHash": "cd6bbaeb9593134143efee6226602785",
      "sourceName": "node_modules/@layerzerolabs/solidity-examples/contracts/util/BytesLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0, <0.9.0",
      "artifacts": {
        "BytesLib": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BytesLib.sol/BytesLib.json"
        }
      }
    },
    "node_modules/@layerzerolabs/solidity-examples/contracts/util/ExcessivelySafeCall.sol": {
      "lastModificationDate": 1691560897592,
      "contentHash": "ef974de452c80735e5cc7f0783f32668",
      "sourceName": "node_modules/@layerzerolabs/solidity-examples/contracts/util/ExcessivelySafeCall.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.7.6",
      "artifacts": {
        "ExcessivelySafeCall": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ExcessivelySafeCall.sol/ExcessivelySafeCall.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
      "lastModificationDate": 1691560895105,
      "contentHash": "a2b1ec38a8dad325a596f926890772b8",
      "sourceName": "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AccessControl": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "AccessControl.sol/AccessControl.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
      "lastModificationDate": 1691560895105,
      "contentHash": "57c84298234411cea19c7c284d86be8b",
      "sourceName": "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IAccessControl": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "access/IAccessControl.sol/IAccessControl.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "lastModificationDate": 1691560895105,
      "contentHash": "5a20b2cad87ddb61c7a3a6af21289e28",
      "sourceName": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Ownable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Ownable.sol/Ownable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "lastModificationDate": 1691560895105,
      "contentHash": "5f2c5c4b6af2dd4551027144797bc8be",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Context": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Context.sol/Context.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
      "lastModificationDate": 1691560895105,
      "contentHash": "48686fc32a22a3754b8e63321857dd2a",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Strings": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Strings.sol/Strings.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
      "lastModificationDate": 1691560895105,
      "contentHash": "0e7db055ce108f9da7bb6686a00287c0",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC165": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ERC165.sol/ERC165.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "lastModificationDate": 1691560895105,
      "contentHash": "03e6768535ac4da0e9756f1d8a4a018a",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC165.sol/IERC165.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
      "lastModificationDate": 1691560895105,
      "contentHash": "fe63409d8a06818b926cf89e0ea88b1b",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Math": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Math.sol/Math.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
      "lastModificationDate": 1691560895105,
      "contentHash": "9488ebd4daacfee8ad04811600d7d061",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SignedMath": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SignedMath.sol/SignedMath.json"
        }
      }
    },
    "node_modules/ds-test/src/test.sol": {
      "lastModificationDate": 1677883973000,
      "contentHash": "9febff9d09f18af5306669dc276c4c43",
      "sourceName": "node_modules/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "test.sol/DSTest.json"
        }
      }
    },
    "node_modules/forge-std/src/Base.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "ee13c050b1914464f1d3f90cde90204b",
      "sourceName": "node_modules/forge-std/src/Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "CommonBase": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Base.sol/CommonBase.json"
        },
        "ScriptBase": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Base.sol/ScriptBase.json"
        },
        "TestBase": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Base.sol/TestBase.json"
        }
      }
    },
    "node_modules/forge-std/src/Script.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "ba325c778a7da8a21c2136aa32763c14",
      "sourceName": "node_modules/forge-std/src/Script.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Script": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Script.sol/Script.json"
        }
      }
    },
    "node_modules/forge-std/src/StdAssertions.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "6cc2858240bcd443debbbf075490e325",
      "sourceName": "node_modules/forge-std/src/StdAssertions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/ds-test/src/test.sol",
        "node_modules/forge-std/src/StdMath.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdAssertions": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdAssertions.sol/StdAssertions.json"
        }
      }
    },
    "node_modules/forge-std/src/StdChains.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "b0324b2e5a11948f852032aa293b3a05",
      "sourceName": "node_modules/forge-std/src/StdChains.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdChains": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdChains.sol/StdChains.json"
        }
      }
    },
    "node_modules/forge-std/src/StdCheats.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "d984e2c76dae07bac1e292af2a5d4fd1",
      "sourceName": "node_modules/forge-std/src/StdCheats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console2.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdCheats": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdCheats.sol/StdCheats.json"
        },
        "StdCheatsSafe": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdCheats.sol/StdCheatsSafe.json"
        }
      }
    },
    "node_modules/forge-std/src/StdError.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "64c896e1276a291776e5ea5aecb3870a",
      "sourceName": "node_modules/forge-std/src/StdError.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdError": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdError.sol/stdError.json"
        }
      }
    },
    "node_modules/forge-std/src/StdInvariant.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "0a580d6fac69e9d4b6504f747f3c0c24",
      "sourceName": "node_modules/forge-std/src/StdInvariant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdInvariant": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdInvariant.sol/StdInvariant.json"
        }
      }
    },
    "node_modules/forge-std/src/StdJson.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "b5de4d3e9eda3333019b0e407ec2a1ac",
      "sourceName": "node_modules/forge-std/src/StdJson.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "stdJson": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdJson.sol/stdJson.json"
        }
      }
    },
    "node_modules/forge-std/src/StdMath.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "9da8f453eba6bb98f3d75bc6822bfb29",
      "sourceName": "node_modules/forge-std/src/StdMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdMath": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdMath.sol/stdMath.json"
        }
      }
    },
    "node_modules/forge-std/src/StdStorage.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "abd6f3379e6e2a7979b18abc21aea0c1",
      "sourceName": "node_modules/forge-std/src/StdStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdStorage": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdStorage.sol/stdStorage.json"
        },
        "stdStorageSafe": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdStorage.sol/stdStorageSafe.json"
        }
      }
    },
    "node_modules/forge-std/src/StdStyle.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "6281165a12aa639705c691fccefd855e",
      "sourceName": "node_modules/forge-std/src/StdStyle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "StdStyle": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdStyle.sol/StdStyle.json"
        }
      }
    },
    "node_modules/forge-std/src/StdUtils.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "3ce83748fd76644688f916c9cced545b",
      "sourceName": "node_modules/forge-std/src/StdUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdUtils": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdUtils.sol/StdUtils.json"
        }
      }
    },
    "node_modules/forge-std/src/Test.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "15866901137b5670eabf31362523bd28",
      "sourceName": "node_modules/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/ds-test/src/test.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/StdAssertions.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdError.sol",
        "node_modules/forge-std/src/StdInvariant.sol",
        "node_modules/forge-std/src/StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Test.sol/Test.json"
        }
      }
    },
    "node_modules/forge-std/src/Vm.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "99c76f92020cc3d67eca52e07eea5d77",
      "sourceName": "node_modules/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Vm": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Vm.sol/Vm.json"
        },
        "VmSafe": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Vm.sol/VmSafe.json"
        }
      }
    },
    "node_modules/forge-std/src/console.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "100b8a33b917da1147740d7ab8b0ded3",
      "sourceName": "node_modules/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "console.sol/console.json"
        }
      }
    },
    "node_modules/forge-std/src/console2.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "491ca717c1915995e78cc361485a3067",
      "sourceName": "node_modules/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "console2.sol/console2.json"
        }
      }
    },
    "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "7b131ca1ca32ef6378b7b9ad5488b901",
      "sourceName": "node_modules/forge-std/src/interfaces/IMulticall3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IMulticall3": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IMulticall3.sol/IMulticall3.json"
        }
      }
    },
    "node_modules/forge-std/src/safeconsole.sol": {
      "lastModificationDate": 1693494897000,
      "contentHash": "ac3b1bf5a444db5db3656021830258a8",
      "sourceName": "node_modules/forge-std/src/safeconsole.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "safeconsole": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "safeconsole.sol/safeconsole.json"
        }
      }
    },
    "script/BridgeFunds.s.sol": {
      "lastModificationDate": 1697065209933,
      "contentHash": "113959de0fbef5d64f31977d46d2ad3a",
      "sourceName": "script/BridgeFunds.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroEndpoint.sol",
        "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroReceiver.sol",
        "node_modules/@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroUserApplicationConfig.sol",
        "node_modules/@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol",
        "node_modules/@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol",
        "node_modules/@layerzerolabs/solidity-examples/contracts/util/BytesLib.sol",
        "node_modules/@layerzerolabs/solidity-examples/contracts/util/ExcessivelySafeCall.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/Script.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ILayerZeroRelayerV2": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BridgeFunds.s.sol/ILayerZeroRelayerV2.json"
        },
        "SphinxLZReceiver": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BridgeFunds.s.sol/SphinxLZReceiver.json"
        },
        "SphinxScript": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BridgeFunds.s.sol/SphinxScript.json"
        }
      }
    },
    "script/ChainSpecific.s.sol": {
      "lastModificationDate": 1697065209934,
      "contentHash": "56a85d1c3acca6732edd75c458b844bb",
      "sourceName": "script/ChainSpecific.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "client/ChainSpecific.c.sol",
        "client/ComplexConstructorArgs.c.sol",
        "client/ConstructorArgsValidationPartOne.c.sol",
        "client/ConstructorArgsValidationPartTwo.c.sol",
        "client/ContainsStorage.c.sol",
        "client/ExternalContract.c.sol",
        "client/MaxArgs.c.sol",
        "client/MsgSender.c.sol",
        "client/MyContracts.c.sol",
        "client/Reverter.c.sol",
        "client/SimpleStorage.c.sol",
        "client/SphinxClient.sol",
        "client/StateDependentActions.c.sol",
        "client/Stateless.c.sol",
        "client/VariableValidation.c.sol",
        "client/typegen/ArrayInputTypes.c.sol",
        "client/typegen/BasicInputTypes.c.sol",
        "client/typegen/Duplicates.c.sol",
        "client/typegen/FunctionInputType.c.sol",
        "client/typegen/ImmutableInputTypes.c.sol",
        "client/typegen/UnnamedParameters.c.sol",
        "client/typegen/conflictingNameContracts/First.c.sol",
        "client/typegen/conflictingNameContracts/Second.c.sol",
        "client/typegen/conflictingTypeNames/First.c.sol",
        "client/typegen/conflictingTypeNames/Second.c.sol",
        "client/typegen/contractInputs/FunctionContract.c.sol",
        "client/typegen/contractInputs/ImportContract.c.sol",
        "client/typegen/imports/Alias.c.sol",
        "client/typegen/imports/AliasArray.c.sol",
        "client/typegen/imports/LocalParent.c.sol",
        "client/typegen/imports/NoAlias.c.sol",
        "client/typegen/imports/NoAliasArray.c.sol",
        "client/typegen/imports/Types.c.sol",
        "client/typegen/inheritance/Alias.c.sol",
        "client/typegen/inheritance/Child.c.sol",
        "client/typegen/inheritance/Parent.c.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/ChainSpecific.sol",
        "contracts/test/ComplexConstructorArgs.sol",
        "contracts/test/ConstructorArgsValidationPartTwo.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/MyContracts.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/Stateless.sol",
        "contracts/test/typegen/ArrayInputTypes.sol",
        "contracts/test/typegen/Duplicates.sol",
        "contracts/test/typegen/conflictingTypeNames/First.sol",
        "contracts/test/typegen/conflictingTypeNames/Second.sol",
        "contracts/test/typegen/imports/LocalParent.sol",
        "contracts/test/typegen/imports/NoAlias.sol",
        "contracts/test/typegen/imports/NoAliasArray.sol",
        "contracts/test/typegen/imports/Types.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ChainSpecific": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ChainSpecific.s.sol/ChainSpecific.json"
        }
      }
    },
    "script/DeployTypeGenTest.s.sol": {
      "lastModificationDate": 1697065209934,
      "contentHash": "11083894742c8ff267f3591838c1a5d5",
      "sourceName": "script/DeployTypeGenTest.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": null,
      "artifacts": {
        "DeployTypeGenTest.s": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "DeployTypeGenTest.s.sol/DeployTypeGenTest.s.json"
        }
      }
    },
    "script/MaxArgsConfiguration.s.sol": {
      "lastModificationDate": 1697065209934,
      "contentHash": "62c906d6c0c08917dec3c1b69da16369",
      "sourceName": "script/MaxArgsConfiguration.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "client/ChainSpecific.c.sol",
        "client/ComplexConstructorArgs.c.sol",
        "client/ConstructorArgsValidationPartOne.c.sol",
        "client/ConstructorArgsValidationPartTwo.c.sol",
        "client/ContainsStorage.c.sol",
        "client/ExternalContract.c.sol",
        "client/MaxArgs.c.sol",
        "client/MsgSender.c.sol",
        "client/MyContracts.c.sol",
        "client/Reverter.c.sol",
        "client/SimpleStorage.c.sol",
        "client/SphinxClient.sol",
        "client/StateDependentActions.c.sol",
        "client/Stateless.c.sol",
        "client/VariableValidation.c.sol",
        "client/typegen/ArrayInputTypes.c.sol",
        "client/typegen/BasicInputTypes.c.sol",
        "client/typegen/Duplicates.c.sol",
        "client/typegen/FunctionInputType.c.sol",
        "client/typegen/ImmutableInputTypes.c.sol",
        "client/typegen/UnnamedParameters.c.sol",
        "client/typegen/conflictingNameContracts/First.c.sol",
        "client/typegen/conflictingNameContracts/Second.c.sol",
        "client/typegen/conflictingTypeNames/First.c.sol",
        "client/typegen/conflictingTypeNames/Second.c.sol",
        "client/typegen/contractInputs/FunctionContract.c.sol",
        "client/typegen/contractInputs/ImportContract.c.sol",
        "client/typegen/imports/Alias.c.sol",
        "client/typegen/imports/AliasArray.c.sol",
        "client/typegen/imports/LocalParent.c.sol",
        "client/typegen/imports/NoAlias.c.sol",
        "client/typegen/imports/NoAliasArray.c.sol",
        "client/typegen/imports/Types.c.sol",
        "client/typegen/inheritance/Alias.c.sol",
        "client/typegen/inheritance/Child.c.sol",
        "client/typegen/inheritance/Parent.c.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/ComplexConstructorArgs.sol",
        "contracts/test/ConstructorArgsValidationPartTwo.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/MaxArgs.sol",
        "contracts/test/MyContracts.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/Stateless.sol",
        "contracts/test/typegen/ArrayInputTypes.sol",
        "contracts/test/typegen/Duplicates.sol",
        "contracts/test/typegen/conflictingTypeNames/First.sol",
        "contracts/test/typegen/conflictingTypeNames/Second.sol",
        "contracts/test/typegen/imports/LocalParent.sol",
        "contracts/test/typegen/imports/NoAlias.sol",
        "contracts/test/typegen/imports/NoAliasArray.sol",
        "contracts/test/typegen/imports/Types.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MaxArgsConfiguration": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MaxArgsConfiguration.s.sol/MaxArgsConfiguration.json"
        }
      }
    },
    "script/Sample.s.sol": {
      "lastModificationDate": 1697070787420,
      "contentHash": "a78806cd043b3865b528145985ab6aba",
      "sourceName": "script/Sample.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "client/ChainSpecific.c.sol",
        "client/ComplexConstructorArgs.c.sol",
        "client/ConstructorArgsValidationPartOne.c.sol",
        "client/ConstructorArgsValidationPartTwo.c.sol",
        "client/ContainsStorage.c.sol",
        "client/ExternalContract.c.sol",
        "client/MaxArgs.c.sol",
        "client/MsgSender.c.sol",
        "client/MyContracts.c.sol",
        "client/Reverter.c.sol",
        "client/SimpleStorage.c.sol",
        "client/SphinxClient.sol",
        "client/StateDependentActions.c.sol",
        "client/Stateless.c.sol",
        "client/VariableValidation.c.sol",
        "client/typegen/ArrayInputTypes.c.sol",
        "client/typegen/BasicInputTypes.c.sol",
        "client/typegen/Duplicates.c.sol",
        "client/typegen/FunctionInputType.c.sol",
        "client/typegen/ImmutableInputTypes.c.sol",
        "client/typegen/UnnamedParameters.c.sol",
        "client/typegen/conflictingNameContracts/First.c.sol",
        "client/typegen/conflictingNameContracts/Second.c.sol",
        "client/typegen/conflictingTypeNames/First.c.sol",
        "client/typegen/conflictingTypeNames/Second.c.sol",
        "client/typegen/contractInputs/FunctionContract.c.sol",
        "client/typegen/contractInputs/ImportContract.c.sol",
        "client/typegen/imports/Alias.c.sol",
        "client/typegen/imports/AliasArray.c.sol",
        "client/typegen/imports/LocalParent.c.sol",
        "client/typegen/imports/NoAlias.c.sol",
        "client/typegen/imports/NoAliasArray.c.sol",
        "client/typegen/imports/Types.c.sol",
        "client/typegen/inheritance/Alias.c.sol",
        "client/typegen/inheritance/Child.c.sol",
        "client/typegen/inheritance/Parent.c.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/ComplexConstructorArgs.sol",
        "contracts/test/ConstructorArgsValidationPartTwo.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/MyContracts.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/Stateless.sol",
        "contracts/test/typegen/ArrayInputTypes.sol",
        "contracts/test/typegen/Duplicates.sol",
        "contracts/test/typegen/conflictingTypeNames/First.sol",
        "contracts/test/typegen/conflictingTypeNames/Second.sol",
        "contracts/test/typegen/imports/LocalParent.sol",
        "contracts/test/typegen/imports/NoAlias.sol",
        "contracts/test/typegen/imports/NoAliasArray.sol",
        "contracts/test/typegen/imports/Types.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/Script.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Sample": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Sample.s.sol/Sample.json"
        }
      }
    },
    "script/StateDependentActionsConfiguration.s.sol": {
      "lastModificationDate": 1697065209934,
      "contentHash": "86c80d10359ca17e0c6450863c27fbea",
      "sourceName": "script/StateDependentActionsConfiguration.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "client/ChainSpecific.c.sol",
        "client/ComplexConstructorArgs.c.sol",
        "client/ConstructorArgsValidationPartOne.c.sol",
        "client/ConstructorArgsValidationPartTwo.c.sol",
        "client/ContainsStorage.c.sol",
        "client/ExternalContract.c.sol",
        "client/MaxArgs.c.sol",
        "client/MsgSender.c.sol",
        "client/MyContracts.c.sol",
        "client/Reverter.c.sol",
        "client/SimpleStorage.c.sol",
        "client/SphinxClient.sol",
        "client/StateDependentActions.c.sol",
        "client/Stateless.c.sol",
        "client/VariableValidation.c.sol",
        "client/typegen/ArrayInputTypes.c.sol",
        "client/typegen/BasicInputTypes.c.sol",
        "client/typegen/Duplicates.c.sol",
        "client/typegen/FunctionInputType.c.sol",
        "client/typegen/ImmutableInputTypes.c.sol",
        "client/typegen/UnnamedParameters.c.sol",
        "client/typegen/conflictingNameContracts/First.c.sol",
        "client/typegen/conflictingNameContracts/Second.c.sol",
        "client/typegen/conflictingTypeNames/First.c.sol",
        "client/typegen/conflictingTypeNames/Second.c.sol",
        "client/typegen/contractInputs/FunctionContract.c.sol",
        "client/typegen/contractInputs/ImportContract.c.sol",
        "client/typegen/imports/Alias.c.sol",
        "client/typegen/imports/AliasArray.c.sol",
        "client/typegen/imports/LocalParent.c.sol",
        "client/typegen/imports/NoAlias.c.sol",
        "client/typegen/imports/NoAliasArray.c.sol",
        "client/typegen/imports/Types.c.sol",
        "client/typegen/inheritance/Alias.c.sol",
        "client/typegen/inheritance/Child.c.sol",
        "client/typegen/inheritance/Parent.c.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/ComplexConstructorArgs.sol",
        "contracts/test/ConstructorArgsValidationPartTwo.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/MyContracts.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/StateDependentActions.sol",
        "contracts/test/Stateless.sol",
        "contracts/test/typegen/ArrayInputTypes.sol",
        "contracts/test/typegen/Duplicates.sol",
        "contracts/test/typegen/conflictingTypeNames/First.sol",
        "contracts/test/typegen/conflictingTypeNames/Second.sol",
        "contracts/test/typegen/imports/LocalParent.sol",
        "contracts/test/typegen/imports/NoAlias.sol",
        "contracts/test/typegen/imports/NoAliasArray.sol",
        "contracts/test/typegen/imports/Types.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StateDependentActionsConfiguration": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StateDependentActionsConfiguration.s.sol/StateDependentActionsConfiguration.json"
        }
      }
    },
    "script/TypeGenTest.s.sol": {
      "lastModificationDate": 1697066519899,
      "contentHash": "97bc32a1cdc6421b7a53911f423241f8",
      "sourceName": "script/TypeGenTest.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "client/ChainSpecific.c.sol",
        "client/ComplexConstructorArgs.c.sol",
        "client/ConstructorArgsValidationPartOne.c.sol",
        "client/ConstructorArgsValidationPartTwo.c.sol",
        "client/ContainsStorage.c.sol",
        "client/ExternalContract.c.sol",
        "client/MaxArgs.c.sol",
        "client/MsgSender.c.sol",
        "client/MyContracts.c.sol",
        "client/Reverter.c.sol",
        "client/SimpleStorage.c.sol",
        "client/SphinxClient.sol",
        "client/StateDependentActions.c.sol",
        "client/Stateless.c.sol",
        "client/VariableValidation.c.sol",
        "client/typegen/ArrayInputTypes.c.sol",
        "client/typegen/BasicInputTypes.c.sol",
        "client/typegen/Duplicates.c.sol",
        "client/typegen/FunctionInputType.c.sol",
        "client/typegen/ImmutableInputTypes.c.sol",
        "client/typegen/UnnamedParameters.c.sol",
        "client/typegen/conflictingNameContracts/First.c.sol",
        "client/typegen/conflictingNameContracts/Second.c.sol",
        "client/typegen/conflictingTypeNames/First.c.sol",
        "client/typegen/conflictingTypeNames/Second.c.sol",
        "client/typegen/contractInputs/FunctionContract.c.sol",
        "client/typegen/contractInputs/ImportContract.c.sol",
        "client/typegen/imports/Alias.c.sol",
        "client/typegen/imports/AliasArray.c.sol",
        "client/typegen/imports/LocalParent.c.sol",
        "client/typegen/imports/NoAlias.c.sol",
        "client/typegen/imports/NoAliasArray.c.sol",
        "client/typegen/imports/Types.c.sol",
        "client/typegen/inheritance/Alias.c.sol",
        "client/typegen/inheritance/Child.c.sol",
        "client/typegen/inheritance/Parent.c.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/ComplexConstructorArgs.sol",
        "contracts/test/ConstructorArgsValidationPartTwo.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/MsgSender.sol",
        "contracts/test/MyContracts.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/Stateless.sol",
        "contracts/test/typegen/ArrayInputTypes.sol",
        "contracts/test/typegen/BasicInputTypes.sol",
        "contracts/test/typegen/Duplicates.sol",
        "contracts/test/typegen/FunctionInputType.sol",
        "contracts/test/typegen/ImmutableInputTypes.sol",
        "contracts/test/typegen/UnnamedParameters.sol",
        "contracts/test/typegen/conflictingNameContracts/First.sol",
        "contracts/test/typegen/conflictingNameContracts/Second.sol",
        "contracts/test/typegen/conflictingTypeNames/First.sol",
        "contracts/test/typegen/conflictingTypeNames/Second.sol",
        "contracts/test/typegen/contractInputs/FunctionContract.sol",
        "contracts/test/typegen/contractInputs/ImportContract.sol",
        "contracts/test/typegen/imports/Alias.sol",
        "contracts/test/typegen/imports/AliasArray.sol",
        "contracts/test/typegen/imports/LocalParent.sol",
        "contracts/test/typegen/imports/NoAlias.sol",
        "contracts/test/typegen/imports/NoAliasArray.sol",
        "contracts/test/typegen/imports/Types.sol",
        "contracts/test/typegen/inheritance/Alias.sol",
        "contracts/test/typegen/inheritance/Child.sol",
        "contracts/test/typegen/inheritance/Parent.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/ds-test/src/test.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/StdAssertions.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdError.sol",
        "node_modules/forge-std/src/StdInvariant.sol",
        "node_modules/forge-std/src/StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Test.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/safeconsole.sol",
        "testExternalContracts/ExternalContract.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "TypeGenTestConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TypeGenTest.s.sol/TypeGenTestConfig.json"
        }
      }
    },
    "test/foundry/AbstractChainSpecific.t.sol": {
      "lastModificationDate": 1697065209936,
      "contentHash": "7a9538aa2c30e5693c6805a42533df05",
      "sourceName": "test/foundry/AbstractChainSpecific.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "client/ChainSpecific.c.sol",
        "client/ComplexConstructorArgs.c.sol",
        "client/ConstructorArgsValidationPartOne.c.sol",
        "client/ConstructorArgsValidationPartTwo.c.sol",
        "client/ContainsStorage.c.sol",
        "client/ExternalContract.c.sol",
        "client/MaxArgs.c.sol",
        "client/MsgSender.c.sol",
        "client/MyContracts.c.sol",
        "client/Reverter.c.sol",
        "client/SimpleStorage.c.sol",
        "client/SphinxClient.sol",
        "client/StateDependentActions.c.sol",
        "client/Stateless.c.sol",
        "client/VariableValidation.c.sol",
        "client/typegen/ArrayInputTypes.c.sol",
        "client/typegen/BasicInputTypes.c.sol",
        "client/typegen/Duplicates.c.sol",
        "client/typegen/FunctionInputType.c.sol",
        "client/typegen/ImmutableInputTypes.c.sol",
        "client/typegen/UnnamedParameters.c.sol",
        "client/typegen/conflictingNameContracts/First.c.sol",
        "client/typegen/conflictingNameContracts/Second.c.sol",
        "client/typegen/conflictingTypeNames/First.c.sol",
        "client/typegen/conflictingTypeNames/Second.c.sol",
        "client/typegen/contractInputs/FunctionContract.c.sol",
        "client/typegen/contractInputs/ImportContract.c.sol",
        "client/typegen/imports/Alias.c.sol",
        "client/typegen/imports/AliasArray.c.sol",
        "client/typegen/imports/LocalParent.c.sol",
        "client/typegen/imports/NoAlias.c.sol",
        "client/typegen/imports/NoAliasArray.c.sol",
        "client/typegen/imports/Types.c.sol",
        "client/typegen/inheritance/Alias.c.sol",
        "client/typegen/inheritance/Child.c.sol",
        "client/typegen/inheritance/Parent.c.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/ChainSpecific.sol",
        "contracts/test/ComplexConstructorArgs.sol",
        "contracts/test/ConstructorArgsValidationPartTwo.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/MyContracts.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/SphinxTestUtils.sol",
        "contracts/test/Stateless.sol",
        "contracts/test/typegen/ArrayInputTypes.sol",
        "contracts/test/typegen/Duplicates.sol",
        "contracts/test/typegen/conflictingTypeNames/First.sol",
        "contracts/test/typegen/conflictingTypeNames/Second.sol",
        "contracts/test/typegen/imports/LocalParent.sol",
        "contracts/test/typegen/imports/NoAlias.sol",
        "contracts/test/typegen/imports/NoAliasArray.sol",
        "contracts/test/typegen/imports/Types.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/ds-test/src/test.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/StdAssertions.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdError.sol",
        "node_modules/forge-std/src/StdInvariant.sol",
        "node_modules/forge-std/src/StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Test.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/safeconsole.sol",
        "script/ChainSpecific.s.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AbstractChainSpecific_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "AbstractChainSpecific.t.sol/AbstractChainSpecific_Test.json"
        }
      }
    },
    "test/foundry/BroadcastChainSpecific.t.sol": {
      "lastModificationDate": 1697065213305,
      "contentHash": "8f8d165feb5b2143cb784baed7f54f1a",
      "sourceName": "test/foundry/BroadcastChainSpecific.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "client/ChainSpecific.c.sol",
        "client/ComplexConstructorArgs.c.sol",
        "client/ConstructorArgsValidationPartOne.c.sol",
        "client/ConstructorArgsValidationPartTwo.c.sol",
        "client/ContainsStorage.c.sol",
        "client/ExternalContract.c.sol",
        "client/MaxArgs.c.sol",
        "client/MsgSender.c.sol",
        "client/MyContracts.c.sol",
        "client/Reverter.c.sol",
        "client/SimpleStorage.c.sol",
        "client/SphinxClient.sol",
        "client/StateDependentActions.c.sol",
        "client/Stateless.c.sol",
        "client/VariableValidation.c.sol",
        "client/typegen/ArrayInputTypes.c.sol",
        "client/typegen/BasicInputTypes.c.sol",
        "client/typegen/Duplicates.c.sol",
        "client/typegen/FunctionInputType.c.sol",
        "client/typegen/ImmutableInputTypes.c.sol",
        "client/typegen/UnnamedParameters.c.sol",
        "client/typegen/conflictingNameContracts/First.c.sol",
        "client/typegen/conflictingNameContracts/Second.c.sol",
        "client/typegen/conflictingTypeNames/First.c.sol",
        "client/typegen/conflictingTypeNames/Second.c.sol",
        "client/typegen/contractInputs/FunctionContract.c.sol",
        "client/typegen/contractInputs/ImportContract.c.sol",
        "client/typegen/imports/Alias.c.sol",
        "client/typegen/imports/AliasArray.c.sol",
        "client/typegen/imports/LocalParent.c.sol",
        "client/typegen/imports/NoAlias.c.sol",
        "client/typegen/imports/NoAliasArray.c.sol",
        "client/typegen/imports/Types.c.sol",
        "client/typegen/inheritance/Alias.c.sol",
        "client/typegen/inheritance/Child.c.sol",
        "client/typegen/inheritance/Parent.c.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/ChainSpecific.sol",
        "contracts/test/ComplexConstructorArgs.sol",
        "contracts/test/ConstructorArgsValidationPartTwo.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/MyContracts.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/SphinxTestUtils.sol",
        "contracts/test/Stateless.sol",
        "contracts/test/typegen/ArrayInputTypes.sol",
        "contracts/test/typegen/Duplicates.sol",
        "contracts/test/typegen/conflictingTypeNames/First.sol",
        "contracts/test/typegen/conflictingTypeNames/Second.sol",
        "contracts/test/typegen/imports/LocalParent.sol",
        "contracts/test/typegen/imports/NoAlias.sol",
        "contracts/test/typegen/imports/NoAliasArray.sol",
        "contracts/test/typegen/imports/Types.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/ds-test/src/test.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/StdAssertions.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdError.sol",
        "node_modules/forge-std/src/StdInvariant.sol",
        "node_modules/forge-std/src/StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Test.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/safeconsole.sol",
        "script/ChainSpecific.s.sol",
        "test/foundry/AbstractChainSpecific.t.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "BroadcastChainSpecificArbitrumGoerli_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BroadcastChainSpecific.t.sol/BroadcastChainSpecificArbitrumGoerli_Test.json"
        },
        "BroadcastChainSpecificArbitrum_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BroadcastChainSpecific.t.sol/BroadcastChainSpecificArbitrum_Test.json"
        },
        "BroadcastChainSpecificEthereum_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BroadcastChainSpecific.t.sol/BroadcastChainSpecificEthereum_Test.json"
        },
        "BroadcastChainSpecificGoerli_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BroadcastChainSpecific.t.sol/BroadcastChainSpecificGoerli_Test.json"
        },
        "BroadcastChainSpecificOptimismGoerli_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BroadcastChainSpecific.t.sol/BroadcastChainSpecificOptimismGoerli_Test.json"
        },
        "BroadcastChainSpecificOptimismMainnet_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BroadcastChainSpecific.t.sol/BroadcastChainSpecificOptimismMainnet_Test.json"
        }
      }
    },
    "test/foundry/ChainSpecific.t.sol": {
      "lastModificationDate": 1697058062434,
      "contentHash": "4b66ba05e7e1ef72cc2100c00af74bb9",
      "sourceName": "test/foundry/ChainSpecific.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "client/ChainSpecific.c.sol",
        "client/ComplexConstructorArgs.c.sol",
        "client/ConstructorArgsValidationPartOne.c.sol",
        "client/ConstructorArgsValidationPartTwo.c.sol",
        "client/ContainsStorage.c.sol",
        "client/ExternalContract.c.sol",
        "client/MaxArgs.c.sol",
        "client/MsgSender.c.sol",
        "client/MyContracts.c.sol",
        "client/Reverter.c.sol",
        "client/SimpleStorage.c.sol",
        "client/SphinxClient.sol",
        "client/StateDependentActions.c.sol",
        "client/Stateless.c.sol",
        "client/VariableValidation.c.sol",
        "client/typegen/ArrayInputTypes.c.sol",
        "client/typegen/BasicInputTypes.c.sol",
        "client/typegen/Duplicates.c.sol",
        "client/typegen/FunctionInputType.c.sol",
        "client/typegen/ImmutableInputTypes.c.sol",
        "client/typegen/UnnamedParameters.c.sol",
        "client/typegen/conflictingNameContracts/First.c.sol",
        "client/typegen/conflictingNameContracts/Second.c.sol",
        "client/typegen/conflictingTypeNames/First.c.sol",
        "client/typegen/conflictingTypeNames/Second.c.sol",
        "client/typegen/contractInputs/FunctionContract.c.sol",
        "client/typegen/contractInputs/ImportContract.c.sol",
        "client/typegen/imports/Alias.c.sol",
        "client/typegen/imports/AliasArray.c.sol",
        "client/typegen/imports/LocalParent.c.sol",
        "client/typegen/imports/NoAlias.c.sol",
        "client/typegen/imports/NoAliasArray.c.sol",
        "client/typegen/imports/Types.c.sol",
        "client/typegen/inheritance/Alias.c.sol",
        "client/typegen/inheritance/Child.c.sol",
        "client/typegen/inheritance/Parent.c.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/ChainSpecific.sol",
        "contracts/test/ComplexConstructorArgs.sol",
        "contracts/test/ConstructorArgsValidationPartTwo.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/MyContracts.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/SphinxTestUtils.sol",
        "contracts/test/Stateless.sol",
        "contracts/test/typegen/ArrayInputTypes.sol",
        "contracts/test/typegen/Duplicates.sol",
        "contracts/test/typegen/conflictingTypeNames/First.sol",
        "contracts/test/typegen/conflictingTypeNames/Second.sol",
        "contracts/test/typegen/imports/LocalParent.sol",
        "contracts/test/typegen/imports/NoAlias.sol",
        "contracts/test/typegen/imports/NoAliasArray.sol",
        "contracts/test/typegen/imports/Types.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/ds-test/src/test.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/StdAssertions.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdError.sol",
        "node_modules/forge-std/src/StdInvariant.sol",
        "node_modules/forge-std/src/StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Test.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/safeconsole.sol",
        "script/ChainSpecific.s.sol",
        "test/foundry/AbstractChainSpecific.t.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ChainSpecificArbitrumGoerli_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ChainSpecific.t.sol/ChainSpecificArbitrumGoerli_Test.json"
        },
        "ChainSpecificArbitrum_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ChainSpecific.t.sol/ChainSpecificArbitrum_Test.json"
        },
        "ChainSpecificEthereum_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ChainSpecific.t.sol/ChainSpecificEthereum_Test.json"
        },
        "ChainSpecificGoerli_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ChainSpecific.t.sol/ChainSpecificGoerli_Test.json"
        },
        "ChainSpecificOptimismGoerli_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ChainSpecific.t.sol/ChainSpecificOptimismGoerli_Test.json"
        },
        "ChainSpecificOptimismMainnet_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ChainSpecific.t.sol/ChainSpecificOptimismMainnet_Test.json"
        }
      }
    },
    "test/foundry/Create3.t.sol": {
      "lastModificationDate": 1697065209936,
      "contentHash": "5607278a03b3f532816fbdfaf95e4e06",
      "sourceName": "test/foundry/Create3.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "client/ChainSpecific.c.sol",
        "client/ComplexConstructorArgs.c.sol",
        "client/ConstructorArgsValidationPartOne.c.sol",
        "client/ConstructorArgsValidationPartTwo.c.sol",
        "client/ContainsStorage.c.sol",
        "client/ExternalContract.c.sol",
        "client/MaxArgs.c.sol",
        "client/MsgSender.c.sol",
        "client/MyContracts.c.sol",
        "client/Reverter.c.sol",
        "client/SimpleStorage.c.sol",
        "client/SphinxClient.sol",
        "client/StateDependentActions.c.sol",
        "client/Stateless.c.sol",
        "client/VariableValidation.c.sol",
        "client/typegen/ArrayInputTypes.c.sol",
        "client/typegen/BasicInputTypes.c.sol",
        "client/typegen/Duplicates.c.sol",
        "client/typegen/FunctionInputType.c.sol",
        "client/typegen/ImmutableInputTypes.c.sol",
        "client/typegen/UnnamedParameters.c.sol",
        "client/typegen/conflictingNameContracts/First.c.sol",
        "client/typegen/conflictingNameContracts/Second.c.sol",
        "client/typegen/conflictingTypeNames/First.c.sol",
        "client/typegen/conflictingTypeNames/Second.c.sol",
        "client/typegen/contractInputs/FunctionContract.c.sol",
        "client/typegen/contractInputs/ImportContract.c.sol",
        "client/typegen/imports/Alias.c.sol",
        "client/typegen/imports/AliasArray.c.sol",
        "client/typegen/imports/LocalParent.c.sol",
        "client/typegen/imports/NoAlias.c.sol",
        "client/typegen/imports/NoAliasArray.c.sol",
        "client/typegen/imports/Types.c.sol",
        "client/typegen/inheritance/Alias.c.sol",
        "client/typegen/inheritance/Child.c.sol",
        "client/typegen/inheritance/Parent.c.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/ComplexConstructorArgs.sol",
        "contracts/test/ConstructorArgsValidationPartTwo.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/MyContracts.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/Stateless.sol",
        "contracts/test/typegen/ArrayInputTypes.sol",
        "contracts/test/typegen/Duplicates.sol",
        "contracts/test/typegen/conflictingTypeNames/First.sol",
        "contracts/test/typegen/conflictingTypeNames/Second.sol",
        "contracts/test/typegen/imports/LocalParent.sol",
        "contracts/test/typegen/imports/NoAlias.sol",
        "contracts/test/typegen/imports/NoAliasArray.sol",
        "contracts/test/typegen/imports/Types.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/ds-test/src/test.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/Script.sol",
        "node_modules/forge-std/src/StdAssertions.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdError.sol",
        "node_modules/forge-std/src/StdInvariant.sol",
        "node_modules/forge-std/src/StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Test.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Create3_Script": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Create3.t.sol/Create3_Script.json"
        },
        "Create3_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Create3.t.sol/Create3_Test.json"
        }
      }
    },
    "test/foundry/MaxArgs.t.sol": {
      "lastModificationDate": 1696825547765,
      "contentHash": "da4a3363866817db89699fc8ced2ba91",
      "sourceName": "test/foundry/MaxArgs.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "client/ChainSpecific.c.sol",
        "client/ComplexConstructorArgs.c.sol",
        "client/ConstructorArgsValidationPartOne.c.sol",
        "client/ConstructorArgsValidationPartTwo.c.sol",
        "client/ContainsStorage.c.sol",
        "client/ExternalContract.c.sol",
        "client/MaxArgs.c.sol",
        "client/MsgSender.c.sol",
        "client/MyContracts.c.sol",
        "client/Reverter.c.sol",
        "client/SimpleStorage.c.sol",
        "client/SphinxClient.sol",
        "client/StateDependentActions.c.sol",
        "client/Stateless.c.sol",
        "client/VariableValidation.c.sol",
        "client/typegen/ArrayInputTypes.c.sol",
        "client/typegen/BasicInputTypes.c.sol",
        "client/typegen/Duplicates.c.sol",
        "client/typegen/FunctionInputType.c.sol",
        "client/typegen/ImmutableInputTypes.c.sol",
        "client/typegen/UnnamedParameters.c.sol",
        "client/typegen/conflictingNameContracts/First.c.sol",
        "client/typegen/conflictingNameContracts/Second.c.sol",
        "client/typegen/conflictingTypeNames/First.c.sol",
        "client/typegen/conflictingTypeNames/Second.c.sol",
        "client/typegen/contractInputs/FunctionContract.c.sol",
        "client/typegen/contractInputs/ImportContract.c.sol",
        "client/typegen/imports/Alias.c.sol",
        "client/typegen/imports/AliasArray.c.sol",
        "client/typegen/imports/LocalParent.c.sol",
        "client/typegen/imports/NoAlias.c.sol",
        "client/typegen/imports/NoAliasArray.c.sol",
        "client/typegen/imports/Types.c.sol",
        "client/typegen/inheritance/Alias.c.sol",
        "client/typegen/inheritance/Child.c.sol",
        "client/typegen/inheritance/Parent.c.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/ComplexConstructorArgs.sol",
        "contracts/test/ConstructorArgsValidationPartTwo.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/MaxArgs.sol",
        "contracts/test/MyContracts.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/Stateless.sol",
        "contracts/test/typegen/ArrayInputTypes.sol",
        "contracts/test/typegen/Duplicates.sol",
        "contracts/test/typegen/conflictingTypeNames/First.sol",
        "contracts/test/typegen/conflictingTypeNames/Second.sol",
        "contracts/test/typegen/imports/LocalParent.sol",
        "contracts/test/typegen/imports/NoAlias.sol",
        "contracts/test/typegen/imports/NoAliasArray.sol",
        "contracts/test/typegen/imports/Types.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/ds-test/src/test.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/StdAssertions.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdError.sol",
        "node_modules/forge-std/src/StdInvariant.sol",
        "node_modules/forge-std/src/StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Test.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/safeconsole.sol",
        "script/MaxArgsConfiguration.s.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MaxArgsTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MaxArgs.t.sol/MaxArgsTest.json"
        }
      }
    },
    "test/foundry/Proposal.t.sol": {
      "lastModificationDate": 1697065209936,
      "contentHash": "dcb41427fb20571675a4182877556e42",
      "sourceName": "test/foundry/Proposal.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "client/ChainSpecific.c.sol",
        "client/ComplexConstructorArgs.c.sol",
        "client/ConstructorArgsValidationPartOne.c.sol",
        "client/ConstructorArgsValidationPartTwo.c.sol",
        "client/ContainsStorage.c.sol",
        "client/ExternalContract.c.sol",
        "client/MaxArgs.c.sol",
        "client/MsgSender.c.sol",
        "client/MyContracts.c.sol",
        "client/Reverter.c.sol",
        "client/SimpleStorage.c.sol",
        "client/SphinxClient.sol",
        "client/StateDependentActions.c.sol",
        "client/Stateless.c.sol",
        "client/VariableValidation.c.sol",
        "client/typegen/ArrayInputTypes.c.sol",
        "client/typegen/BasicInputTypes.c.sol",
        "client/typegen/Duplicates.c.sol",
        "client/typegen/FunctionInputType.c.sol",
        "client/typegen/ImmutableInputTypes.c.sol",
        "client/typegen/UnnamedParameters.c.sol",
        "client/typegen/conflictingNameContracts/First.c.sol",
        "client/typegen/conflictingNameContracts/Second.c.sol",
        "client/typegen/conflictingTypeNames/First.c.sol",
        "client/typegen/conflictingTypeNames/Second.c.sol",
        "client/typegen/contractInputs/FunctionContract.c.sol",
        "client/typegen/contractInputs/ImportContract.c.sol",
        "client/typegen/imports/Alias.c.sol",
        "client/typegen/imports/AliasArray.c.sol",
        "client/typegen/imports/LocalParent.c.sol",
        "client/typegen/imports/NoAlias.c.sol",
        "client/typegen/imports/NoAliasArray.c.sol",
        "client/typegen/imports/Types.c.sol",
        "client/typegen/inheritance/Alias.c.sol",
        "client/typegen/inheritance/Child.c.sol",
        "client/typegen/inheritance/Parent.c.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/ComplexConstructorArgs.sol",
        "contracts/test/ConstructorArgsValidationPartTwo.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/MyContracts.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/SphinxTestUtils.sol",
        "contracts/test/Stateless.sol",
        "contracts/test/typegen/ArrayInputTypes.sol",
        "contracts/test/typegen/Duplicates.sol",
        "contracts/test/typegen/conflictingTypeNames/First.sol",
        "contracts/test/typegen/conflictingTypeNames/Second.sol",
        "contracts/test/typegen/imports/LocalParent.sol",
        "contracts/test/typegen/imports/NoAlias.sol",
        "contracts/test/typegen/imports/NoAliasArray.sol",
        "contracts/test/typegen/imports/Types.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/ds-test/src/test.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/Script.sol",
        "node_modules/forge-std/src/StdAssertions.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdError.sol",
        "node_modules/forge-std/src/StdInvariant.sol",
        "node_modules/forge-std/src/StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Test.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AbstractProposal_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Proposal.t.sol/AbstractProposal_Test.json"
        },
        "ProposalFifth_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Proposal.t.sol/ProposalFifth_Test.json"
        },
        "ProposalFourth_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Proposal.t.sol/ProposalFourth_Test.json"
        },
        "ProposalSecond_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Proposal.t.sol/ProposalSecond_Test.json"
        },
        "ProposalThird_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Proposal.t.sol/ProposalThird_Test.json"
        },
        "Proposal_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Proposal.t.sol/Proposal_Test.json"
        }
      }
    },
    "test/foundry/SphinxUtils.t.sol": {
      "lastModificationDate": 1697065213305,
      "contentHash": "41074f7361fc617295a0f56989217306",
      "sourceName": "test/foundry/SphinxUtils.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "node_modules/ds-test/src/test.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/StdAssertions.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdError.sol",
        "node_modules/forge-std/src/StdInvariant.sol",
        "node_modules/forge-std/src/StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Test.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SphinxUtils_Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SphinxUtils.t.sol/SphinxUtils_Test.json"
        }
      }
    },
    "test/foundry/StateDependentActions.t.sol": {
      "lastModificationDate": 1696825547766,
      "contentHash": "9f393a7a708b67cb1f6f49169040ada1",
      "sourceName": "test/foundry/StateDependentActions.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "client/ChainSpecific.c.sol",
        "client/ComplexConstructorArgs.c.sol",
        "client/ConstructorArgsValidationPartOne.c.sol",
        "client/ConstructorArgsValidationPartTwo.c.sol",
        "client/ContainsStorage.c.sol",
        "client/ExternalContract.c.sol",
        "client/MaxArgs.c.sol",
        "client/MsgSender.c.sol",
        "client/MyContracts.c.sol",
        "client/Reverter.c.sol",
        "client/SimpleStorage.c.sol",
        "client/SphinxClient.sol",
        "client/StateDependentActions.c.sol",
        "client/Stateless.c.sol",
        "client/VariableValidation.c.sol",
        "client/typegen/ArrayInputTypes.c.sol",
        "client/typegen/BasicInputTypes.c.sol",
        "client/typegen/Duplicates.c.sol",
        "client/typegen/FunctionInputType.c.sol",
        "client/typegen/ImmutableInputTypes.c.sol",
        "client/typegen/UnnamedParameters.c.sol",
        "client/typegen/conflictingNameContracts/First.c.sol",
        "client/typegen/conflictingNameContracts/Second.c.sol",
        "client/typegen/conflictingTypeNames/First.c.sol",
        "client/typegen/conflictingTypeNames/Second.c.sol",
        "client/typegen/contractInputs/FunctionContract.c.sol",
        "client/typegen/contractInputs/ImportContract.c.sol",
        "client/typegen/imports/Alias.c.sol",
        "client/typegen/imports/AliasArray.c.sol",
        "client/typegen/imports/LocalParent.c.sol",
        "client/typegen/imports/NoAlias.c.sol",
        "client/typegen/imports/NoAliasArray.c.sol",
        "client/typegen/imports/Types.c.sol",
        "client/typegen/inheritance/Alias.c.sol",
        "client/typegen/inheritance/Child.c.sol",
        "client/typegen/inheritance/Parent.c.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/ComplexConstructorArgs.sol",
        "contracts/test/ConstructorArgsValidationPartTwo.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/MyContracts.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/StateDependentActions.sol",
        "contracts/test/Stateless.sol",
        "contracts/test/typegen/ArrayInputTypes.sol",
        "contracts/test/typegen/Duplicates.sol",
        "contracts/test/typegen/conflictingTypeNames/First.sol",
        "contracts/test/typegen/conflictingTypeNames/Second.sol",
        "contracts/test/typegen/imports/LocalParent.sol",
        "contracts/test/typegen/imports/NoAlias.sol",
        "contracts/test/typegen/imports/NoAliasArray.sol",
        "contracts/test/typegen/imports/Types.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/ds-test/src/test.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/StdAssertions.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdError.sol",
        "node_modules/forge-std/src/StdInvariant.sol",
        "node_modules/forge-std/src/StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Test.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/safeconsole.sol",
        "script/StateDependentActionsConfiguration.s.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StateDependentActionsTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StateDependentActions.t.sol/StateDependentActionsTest.json"
        }
      }
    },
    "test/foundry/TypeGenTest.t.sol": {
      "lastModificationDate": 1697058062435,
      "contentHash": "81a6b194ec098fe4229d577941a1cec3",
      "sourceName": "test/foundry/TypeGenTest.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/SphinxDataTypes.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/IAccessControl.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxManager.sol",
        "/Users/samgoldman/dev/sphinx/packages/contracts/contracts/interfaces/ISphinxRegistry.sol",
        "../contracts/contracts/SphinxDataTypes.sol",
        "../contracts/contracts/interfaces/IAccessControl.sol",
        "../contracts/contracts/interfaces/IAccessControlEnumerable.sol",
        "../contracts/contracts/interfaces/ISemver.sol",
        "../contracts/contracts/interfaces/ISphinxAuth.sol",
        "../contracts/contracts/interfaces/ISphinxAuthFactory.sol",
        "../contracts/contracts/interfaces/ISphinxManager.sol",
        "../contracts/contracts/interfaces/ISphinxRegistry.sol",
        "client/ChainSpecific.c.sol",
        "client/ComplexConstructorArgs.c.sol",
        "client/ConstructorArgsValidationPartOne.c.sol",
        "client/ConstructorArgsValidationPartTwo.c.sol",
        "client/ContainsStorage.c.sol",
        "client/ExternalContract.c.sol",
        "client/MaxArgs.c.sol",
        "client/MsgSender.c.sol",
        "client/MyContracts.c.sol",
        "client/Reverter.c.sol",
        "client/SimpleStorage.c.sol",
        "client/SphinxClient.sol",
        "client/StateDependentActions.c.sol",
        "client/Stateless.c.sol",
        "client/VariableValidation.c.sol",
        "client/typegen/ArrayInputTypes.c.sol",
        "client/typegen/BasicInputTypes.c.sol",
        "client/typegen/Duplicates.c.sol",
        "client/typegen/FunctionInputType.c.sol",
        "client/typegen/ImmutableInputTypes.c.sol",
        "client/typegen/UnnamedParameters.c.sol",
        "client/typegen/conflictingNameContracts/First.c.sol",
        "client/typegen/conflictingNameContracts/Second.c.sol",
        "client/typegen/conflictingTypeNames/First.c.sol",
        "client/typegen/conflictingTypeNames/Second.c.sol",
        "client/typegen/contractInputs/FunctionContract.c.sol",
        "client/typegen/contractInputs/ImportContract.c.sol",
        "client/typegen/imports/Alias.c.sol",
        "client/typegen/imports/AliasArray.c.sol",
        "client/typegen/imports/LocalParent.c.sol",
        "client/typegen/imports/NoAlias.c.sol",
        "client/typegen/imports/NoAliasArray.c.sol",
        "client/typegen/imports/Types.c.sol",
        "client/typegen/inheritance/Alias.c.sol",
        "client/typegen/inheritance/Child.c.sol",
        "client/typegen/inheritance/Parent.c.sol",
        "contracts/foundry/AbstractContractClient.sol",
        "contracts/foundry/Sphinx.sol",
        "contracts/foundry/SphinxConstants.sol",
        "contracts/foundry/SphinxPluginTypes.sol",
        "contracts/foundry/SphinxUtils.sol",
        "contracts/test/ComplexConstructorArgs.sol",
        "contracts/test/ConstructorArgsValidationPartTwo.sol",
        "contracts/test/ContainsStorage.sol",
        "contracts/test/MsgSender.sol",
        "contracts/test/MyContracts.sol",
        "contracts/test/SimpleStorage.sol",
        "contracts/test/Stateless.sol",
        "contracts/test/typegen/ArrayInputTypes.sol",
        "contracts/test/typegen/BasicInputTypes.sol",
        "contracts/test/typegen/Duplicates.sol",
        "contracts/test/typegen/FunctionInputType.sol",
        "contracts/test/typegen/ImmutableInputTypes.sol",
        "contracts/test/typegen/UnnamedParameters.sol",
        "contracts/test/typegen/conflictingNameContracts/First.sol",
        "contracts/test/typegen/conflictingNameContracts/Second.sol",
        "contracts/test/typegen/conflictingTypeNames/First.sol",
        "contracts/test/typegen/conflictingTypeNames/Second.sol",
        "contracts/test/typegen/contractInputs/FunctionContract.sol",
        "contracts/test/typegen/contractInputs/ImportContract.sol",
        "contracts/test/typegen/imports/Alias.sol",
        "contracts/test/typegen/imports/AliasArray.sol",
        "contracts/test/typegen/imports/LocalParent.sol",
        "contracts/test/typegen/imports/NoAlias.sol",
        "contracts/test/typegen/imports/NoAliasArray.sol",
        "contracts/test/typegen/imports/Types.sol",
        "contracts/test/typegen/inheritance/Alias.sol",
        "contracts/test/typegen/inheritance/Child.sol",
        "contracts/test/typegen/inheritance/Parent.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/ds-test/src/test.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/StdAssertions.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdError.sol",
        "node_modules/forge-std/src/StdInvariant.sol",
        "node_modules/forge-std/src/StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Test.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/safeconsole.sol",
        "script/TypeGenTest.s.sol",
        "testExternalContracts/ExternalContract.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "TypeGenTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TypeGenTest.t.sol/TypeGenTest.json"
        }
      }
    },
    "testExternalContracts/ExternalContract.sol": {
      "lastModificationDate": 1697065209937,
      "contentHash": "26ebdd8c4ee9aebcacb6920f592fee9b",
      "sourceName": "testExternalContracts/ExternalContract.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout",
                "evm.gasEstimates"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ExternalContract": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ExternalContract.sol/ExternalContract.json"
        }
      }
    }
  }
}