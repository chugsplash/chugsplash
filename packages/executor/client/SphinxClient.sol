// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY
// SPDX-License-Identifier: MIT
pragma solidity >=0.7.4 <0.9.0;

import { Sphinx } from "@sphinx-labs/plugins/Sphinx.sol";
import { SphinxConfig, DeployOptions, DefineOptions } from "@sphinx-labs/plugins/SphinxPluginTypes.sol";
import { ExecutorTestClient } from "./ExecutorTest.c.sol";

abstract contract SphinxClient is Sphinx {
  
  function defineExecutorTest(
    address addr
  ) internal returns (ExecutorTestClient) {
    return defineExecutorTest(
      addr, DefineOptions({ referenceName: "ExecutorTest" })
    );
  }

  function defineExecutorTest(
    address addr,
    DefineOptions memory _defineOptions
  ) internal returns (ExecutorTestClient) {
    return ExecutorTestClient(
      _sphinxDefineContract(
        _defineOptions.referenceName,
        addr,
        "contracts/ExecutorTest.sol:ExecutorTest",
        "ExecutorTest.c.sol:ExecutorTestClient"
      )
    );
  }

  function deployExecutorTest(
    uint8 _val
  ) internal returns (ExecutorTestClient) {
    return deployExecutorTest(
      _val,
      DeployOptions({ salt: bytes32(0), referenceName: "ExecutorTest" })
    );
  }

  function deployExecutorTest(
    uint8 _val,
    DeployOptions memory _sphinxInternalDeployOptions
  ) internal returns (ExecutorTestClient) {
    bytes memory sphinxInternalConstructorArgs = abi.encode(
      _val
    );
    return ExecutorTestClient(
      _sphinxDeployContract(
        _sphinxInternalDeployOptions.referenceName,
        _sphinxInternalDeployOptions.salt,
        sphinxInternalConstructorArgs,
        "contracts/ExecutorTest.sol:ExecutorTest",
        "ExecutorTest.c.sol:ExecutorTestClient",
        "ExecutorTest.sol:ExecutorTest"
      )
    );
  }
}
